// generated with ast extension for cup
// version 0.8
// 19/7/2020 13:59:52


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(DesignatorElemList DesignatorElemList);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(MethodDeclClass MethodDeclClass);
    public void visit(AddopLeft AddopLeft);
    public void visit(ConditionList ConditionList);
    public void visit(AddopRight AddopRight);
    public void visit(ExprList ExprList);
    public void visit(DeclListVar DeclListVar);
    public void visit(Relop Relop);
    public void visit(MulopRight MulopRight);
    public void visit(FormalParamList FormalParamList);
    public void visit(DeclList DeclList);
    public void visit(MulopLeft MulopLeft);
    public void visit(Expr Expr);
    public void visit(AbsMethDeclClassList AbsMethDeclClassList);
    public void visit(AbstractClassDecl AbstractClassDecl);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DeclListElem DeclListElem);
    public void visit(AbsMethodSignification AbsMethodSignification);
    public void visit(Unmatched Unmatched);
    public void visit(ConstType ConstType);
    public void visit(DesignatorAssignmentStatement DesignatorAssignmentStatement);
    public void visit(MethodDecl1 MethodDecl1);
    public void visit(DesignatorForBegin DesignatorForBegin);
    public void visit(ActualParamList ActualParamList);
    public void visit(TermListElem TermListElem);
    public void visit(AccessRights AccessRights);
    public void visit(Mulop Mulop);
    public void visit(DesignatorElem DesignatorElem);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(DesignatorStatementFor DesignatorStatementFor);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(Assignop Assignop);
    public void visit(CondTermList CondTermList);
    public void visit(ConditionFor ConditionFor);
    public void visit(ListMulop ListMulop);
    public void visit(AbsMethDeclClass AbsMethDeclClass);
    public void visit(CondTerm CondTerm);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(ExprListElem ExprListElem);
    public void visit(ClassDecl ClassDecl);
    public void visit(AbsMethodDecl AbsMethodDecl);
    public void visit(ConstDeclTypeName ConstDeclTypeName);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ListAddop ListAddop);
    public void visit(VarDeclTypeName VarDeclTypeName);
    public void visit(TermList TermList);
    public void visit(DesAssStmtCombOperators DesAssStmtCombOperators);
    public void visit(ExtendsClass ExtendsClass);
    public void visit(AbsMethDeclListElem AbsMethDeclListElem);
    public void visit(ActPars ActPars);
    public void visit(Designator Designator);
    public void visit(Matched Matched);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(VarDeclElem VarDeclElem);
    public void visit(Term Term);
    public void visit(ModR ModR);
    public void visit(DivR DivR);
    public void visit(MulR MulR);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(MulRight MulRight);
    public void visit(MulLeft MulLeft);
    public void visit(MinusRight MinusRight);
    public void visit(PlusRight PlusRight);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(AddRight AddRight);
    public void visit(AddLeft AddLeft);
    public void visit(AssignMulRight AssignMulRight);
    public void visit(AssignAddRight AssignAddRight);
    public void visit(Assign Assign);
    public void visit(SmallerOrEqual SmallerOrEqual);
    public void visit(Smaller Smaller);
    public void visit(GreaterOrEqual GreaterOrEqual);
    public void visit(Greater Greater);
    public void visit(Different Different);
    public void visit(Same Same);
    public void visit(ClassField ClassField);
    public void visit(ArrayElem ArrayElem);
    public void visit(MyNoDesignatorElemList MyNoDesignatorElemList);
    public void visit(MyDesignatorElemList MyDesignatorElemList);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(Design Design);
    public void visit(FuncCallFactorDesignator FuncCallFactorDesignator);
    public void visit(NewClass NewClass);
    public void visit(NewFactor NewFactor);
    public void visit(FuncCallFactor FuncCallFactor);
    public void visit(Var Var);
    public void visit(ExprFactor ExprFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumberFactor NumberFactor);
    public void visit(ListMul ListMul);
    public void visit(TermListElems TermListElems);
    public void visit(MyNoTermList MyNoTermList);
    public void visit(MyTermList MyTermList);
    public void visit(Terms Terms);
    public void visit(ListAdd ListAdd);
    public void visit(ExprListElems ExprListElems);
    public void visit(MyNoExprList MyNoExprList);
    public void visit(MyExprList MyExprList);
    public void visit(MinusTerm MinusTerm);
    public void visit(DesListElem DesListElem);
    public void visit(NoMinusExpr NoMinusExpr);
    public void visit(MinusExpr MinusExpr);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactNoRelop CondFactNoRelop);
    public void visit(MyNoCondTermList MyNoCondTermList);
    public void visit(MyCondTermList MyCondTermList);
    public void visit(CondTerms CondTerms);
    public void visit(MyNoConditionList MyNoConditionList);
    public void visit(MyConditionList MyConditionList);
    public void visit(Condition Condition);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(DesAssStmtCombOper DesAssStmtCombOper);
    public void visit(DesVar DesVar);
    public void visit(ErrorDesAssStmtm ErrorDesAssStmtm);
    public void visit(DesAssStmtm DesAssStmtm);
    public void visit(DesStmtFuncCallDesignator DesStmtFuncCallDesignator);
    public void visit(DesignatorStatementDEC DesignatorStatementDEC);
    public void visit(DesignatorStatementINC DesignatorStatementINC);
    public void visit(DesignatorStatementFuncCall DesignatorStatementFuncCall);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(ErrorStmtConditionFor ErrorStmtConditionFor);
    public void visit(MyNoConditionFor MyNoConditionFor);
    public void visit(MyConditionFor MyConditionFor);
    public void visit(MyNoDesignatorForBegin MyNoDesignatorForBegin);
    public void visit(MyDesignatorForBegin MyDesignatorForBegin);
    public void visit(MyNoDesignatorStatementFor MyNoDesignatorStatementFor);
    public void visit(MyDesignatorStatementFor MyDesignatorStatementFor);
    public void visit(ForBody ForBody);
    public void visit(BeginingIf BeginingIf);
    public void visit(StmtIf StmtIf);
    public void visit(CondIf CondIf);
    public void visit(ForEachBody ForEachBody);
    public void visit(ForEachDesignator ForEachDesignator);
    public void visit(ForEachIndexName ForEachIndexName);
    public void visit(StatementForeach StatementForeach);
    public void visit(StatementFor StatementFor);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementIf StatementIf);
    public void visit(StatementSTMT StatementSTMT);
    public void visit(StatementPrintNumber StatementPrintNumber);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementNoReturnExpr StatementNoReturnExpr);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementDesStat StatementDesStat);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(ErrorStmtFormPars ErrorStmtFormPars);
    public void visit(FormalParamDeclNoBraces FormalParamDeclNoBraces);
    public void visit(FormalParamDeclBraces FormalParamDeclBraces);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(MyNoDeclListVar MyNoDeclListVar);
    public void visit(MyDeclListVar MyDeclListVar);
    public void visit(NoMethodTypeNameVoid NoMethodTypeNameVoid);
    public void visit(MethodTypeNameRet MethodTypeNameRet);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(AbsMethodSignifications AbsMethodSignifications);
    public void visit(ErrorStmtAbsMethodDecl ErrorStmtAbsMethodDecl);
    public void visit(MyAbsMethodDecl MyAbsMethodDecl);
    public void visit(AbsClassAbsMethDecl AbsClassAbsMethDecl);
    public void visit(AbsClassMethodDecl AbsClassMethodDecl);
    public void visit(MyNoAbsMethDeclClassList MyNoAbsMethDeclClassList);
    public void visit(MyAbsMethDeclClassList MyAbsMethDeclClassList);
    public void visit(MyNoAbsMethDeclClass MyNoAbsMethDeclClass);
    public void visit(MyAbsMethDeclClass MyAbsMethDeclClass);
    public void visit(AbsClassType AbsClassType);
    public void visit(MyAbstractClassDecl MyAbstractClassDecl);
    public void visit(MyNoMethodDeclClass MyNoMethodDeclClass);
    public void visit(MyMethodDeclClass MyMethodDeclClass);
    public void visit(ErrorStmtExtendsClass ErrorStmtExtendsClass);
    public void visit(MyNoExtendsClass MyNoExtendsClass);
    public void visit(MyExtendsClass MyExtendsClass);
    public void visit(ClassType ClassType);
    public void visit(MyClassDecl MyClassDecl);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(VarDeclElemNoBraces VarDeclElemNoBraces);
    public void visit(VarDeclElemBraces VarDeclElemBraces);
    public void visit(MyNoVarDeclList MyNoVarDeclList);
    public void visit(MyVarDeclList MyVarDeclList);
    public void visit(VarDeclType VarDeclType);
    public void visit(NoRights NoRights);
    public void visit(PrivateRight PrivateRight);
    public void visit(ProtectedRight ProtectedRight);
    public void visit(PublicRight PublicRight);
    public void visit(VarDecl VarDecl);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstDeclElem ConstDeclElem);
    public void visit(MyNoConstDeclList MyNoConstDeclList);
    public void visit(MyConstDeclList MyConstDeclList);
    public void visit(ConstDeclType ConstDeclType);
    public void visit(ConstDecl ConstDecl);
    public void visit(ClassDeclElem ClassDeclElem);
    public void visit(AbstractClassDeclElem AbstractClassDeclElem);
    public void visit(VarDeclListElem VarDeclListElem);
    public void visit(ConstDeclListElem ConstDeclListElem);
    public void visit(MyNoDeclList MyNoDeclList);
    public void visit(MyDeclList MyDeclList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
