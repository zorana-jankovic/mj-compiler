program P
const int size = 10;
abstract class Tab{
	public int size;
	{
		public abstract int getp(int i);
		public abstract int getn(int i);
		public int getSize() { return size;}
	}
}
class Table extends Tab{
	public int pos[], neg[];
	{
	 public void putp (int a, int idx) { this.pos[idx]=a; }
	 public void putn (int a, int idx) { this.neg[idx]=a; }
	 public int getp (int idx) { return pos[idx]; }
	 public int getn (int idx) { return neg[idx]; }
	}
}
Table val;
{
	void f(char ch, int a, int arg)
		int x;
		{
			x = arg;
		}
	void main()
		int x, i;
		char c;
		{ // Initialize val
			val = new Table;
			val.pos = new int [size];
			val.neg = new int [size];
			for (i = 0; i<size; i++)
			{
				val.putp(0,i);
				val.putn(0,i);
			}
			f(c, x, i);
			//Read values
			read(x);
			for (;x > 0;)
			{
				if (0 <= x && x < size)
				{
					val.putp(val.getp(x)+1,x);
				} else
				 if (-size < x && x < 0)
				 {
					val.putn(val.getn(-x)+1, -x);
		 		}
				read(x);
			} 
			
			foreach(i: val.neg){
				print(i);
			}
			print(eol);
			foreach(i: val.pos){
				print(i);
			}
			
			val.size = 3;
			print(eol);
			print(val.getSize());
	}
}