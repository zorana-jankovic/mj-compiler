INFO  06:02:17,553 - Compiling source file: D:\faks\zorana\4.Godina-1.Semestar\pp1\projekat\MJCompiler_jz160143\workspace\MJCompiler\test\forEachTest.mj
INFO  06:02:17,612 - #2 program
INFO  06:02:17,612 - #15 MJProgram
INFO  06:02:17,612 - #15 int
INFO  06:02:17,612 - #15 x
INFO  06:02:17,612 - #5 ;
INFO  06:02:17,612 - #15 int
INFO  06:02:17,612 - #15 y
INFO  06:02:17,612 - #5 ;
INFO  06:02:17,612 - #15 char
INFO  06:02:17,612 - #15 arr
INFO  06:02:17,612 - #44 [
INFO  06:02:17,612 - #45 ]
INFO  06:02:17,612 - #5 ;
INFO  06:02:17,612 - #15 int
INFO  06:02:17,612 - #15 arr2
INFO  06:02:17,612 - #44 [
INFO  06:02:17,612 - #45 ]
INFO  06:02:17,612 - #5 ;
INFO  06:02:17,612 - #3 {
INFO  06:02:17,612 - #13 void
INFO  06:02:17,628 - #15 init
INFO  06:02:17,628 - #6 (
INFO  06:02:17,628 - #15 char
INFO  06:02:17,628 - #15 arr
INFO  06:02:17,628 - #44 [
INFO  06:02:17,628 - #45 ]
INFO  06:02:17,628 - #12 ,
INFO  06:02:17,628 - #15 int
INFO  06:02:17,628 - #15 x
INFO  06:02:17,628 - #7 )
INFO  06:02:17,628 - #3 {
INFO  06:02:17,628 - #26 for
INFO  06:02:17,628 - #6 (
INFO  06:02:17,628 - #15 x
INFO  06:02:17,628 - #8 =
INFO  06:02:17,628 - #14 0
INFO  06:02:17,628 - #5 ;
INFO  06:02:17,628 - #15 x
INFO  06:02:17,628 - #37 <
INFO  06:02:17,628 - #14 10
INFO  06:02:17,628 - #5 ;
INFO  06:02:17,628 - #15 x
INFO  06:02:17,628 - #41 ++
INFO  06:02:17,628 - #7 )
INFO  06:02:17,628 - #3 {
INFO  06:02:17,628 - #15 arr
INFO  06:02:17,628 - #44 [
INFO  06:02:17,628 - #15 x
INFO  06:02:17,628 - #45 ]
INFO  06:02:17,628 - #8 =
INFO  06:02:17,628 - #15 chr
INFO  06:02:17,628 - #6 (
INFO  06:02:17,628 - #15 x
INFO  06:02:17,628 - #10 +
INFO  06:02:17,628 - #14 65
INFO  06:02:17,628 - #7 )
INFO  06:02:17,628 - #5 ;
INFO  06:02:17,628 - #4 }
INFO  06:02:17,628 - #4 }
INFO  06:02:17,644 - #13 void
INFO  06:02:17,644 - #15 init2
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 int
INFO  06:02:17,644 - #15 arr
INFO  06:02:17,644 - #44 [
INFO  06:02:17,644 - #45 ]
INFO  06:02:17,644 - #12 ,
INFO  06:02:17,644 - #15 int
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #3 {
INFO  06:02:17,644 - #26 for
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #8 =
INFO  06:02:17,644 - #14 0
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #37 <
INFO  06:02:17,644 - #14 100
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #41 ++
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #3 {
INFO  06:02:17,644 - #15 arr
INFO  06:02:17,644 - #44 [
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #45 ]
INFO  06:02:17,644 - #8 =
INFO  06:02:17,644 - #14 1
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #4 }
INFO  06:02:17,644 - #4 }
INFO  06:02:17,644 - #13 void
INFO  06:02:17,644 - #15 main
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #15 char
INFO  06:02:17,644 - #15 c
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #15 bool
INFO  06:02:17,644 - #15 b
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #15 int
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #15 int
INFO  06:02:17,644 - #15 z
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #3 {
INFO  06:02:17,644 - #15 arr
INFO  06:02:17,644 - #8 =
INFO  06:02:17,644 - #24 new
INFO  06:02:17,644 - #15 char
INFO  06:02:17,644 - #44 [
INFO  06:02:17,644 - #14 10
INFO  06:02:17,644 - #45 ]
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #15 init
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 arr
INFO  06:02:17,644 - #12 ,
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #15 init2
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 arr2
INFO  06:02:17,644 - #12 ,
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #51 foreach
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 c
INFO  06:02:17,644 - #52 :
INFO  06:02:17,644 - #15 arr
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #3 {
INFO  06:02:17,644 - #51 foreach
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 x
INFO  06:02:17,644 - #52 :
INFO  06:02:17,644 - #15 arr2
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #3 {
INFO  06:02:17,644 - #15 y
INFO  06:02:17,644 - #41 ++
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #4 }
INFO  06:02:17,644 - #11 print
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 c
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #11 print
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 eol
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #4 }
INFO  06:02:17,644 - #11 print
INFO  06:02:17,644 - #6 (
INFO  06:02:17,644 - #15 y
INFO  06:02:17,644 - #7 )
INFO  06:02:17,644 - #5 ;
INFO  06:02:17,644 - #4 }
INFO  06:02:17,644 - #4 }
INFO  06:02:17,659 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  MyDeclList(
    MyDeclList(
      MyDeclList(
        MyDeclList(
          MyNoDeclList(
          ) [MyNoDeclList]
          VarDeclListElem(
            VarDecl(
              VarDeclType(
                Type(
                 int
                ) [Type]
              ) [VarDeclType]
              VarDeclElemNoBraces(
               x
              ) [VarDeclElemNoBraces]
              MyNoVarDeclList(
              ) [MyNoVarDeclList]
            ) [VarDecl]
          ) [VarDeclListElem]
        ) [MyDeclList]
        VarDeclListElem(
          VarDecl(
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            VarDeclElemNoBraces(
             y
            ) [VarDeclElemNoBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [VarDeclListElem]
      ) [MyDeclList]
      VarDeclListElem(
        VarDecl(
          VarDeclType(
            Type(
             char
            ) [Type]
          ) [VarDeclType]
          VarDeclElemBraces(
           arr
          ) [VarDeclElemBraces]
          MyNoVarDeclList(
          ) [MyNoVarDeclList]
        ) [VarDecl]
      ) [VarDeclListElem]
    ) [MyDeclList]
    VarDeclListElem(
      VarDecl(
        VarDeclType(
          Type(
           int
          ) [Type]
        ) [VarDeclType]
        VarDeclElemBraces(
         arr2
        ) [VarDeclElemBraces]
        MyNoVarDeclList(
        ) [MyNoVarDeclList]
      ) [VarDecl]
    ) [VarDeclListElem]
  ) [MyDeclList]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          NoMethodTypeNameVoid(
           init
          ) [NoMethodTypeNameVoid]
          FormParams(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclBraces(
                  Type(
                   char
                  ) [Type]
                 arr
                ) [FormalParamDeclBraces]
              ) [SingleFormalParamDecl]
              FormalParamDeclNoBraces(
                Type(
                 int
                ) [Type]
               x
              ) [FormalParamDeclNoBraces]
            ) [FormalParamDecls]
          ) [FormParams]
          MyNoDeclListVar(
          ) [MyNoDeclListVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            StatementFor(
              MyDesignatorForBegin(
                DesignatorStatementAssign(
                  DesAssStmtm(
                    Design(
                     x
                      Variable(
                      ) [Variable]
                    ) [Design]
                    DesAssStmtCombOper(
                      Assign(
                      ) [Assign]
                    ) [DesAssStmtCombOper]
                    NoMinusExpr(
                      Terms(
                        NumberFactor(
                         0
                        ) [NumberFactor]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [DesAssStmtm]
                ) [DesignatorStatementAssign]
              ) [MyDesignatorForBegin]
              MyConditionFor(
                Condition(
                  CondTerms(
                    CondFactRelop(
                      NoMinusExpr(
                        Terms(
                          Var(
                            Design(
                             x
                              Variable(
                              ) [Variable]
                            ) [Design]
                          ) [Var]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                      Smaller(
                      ) [Smaller]
                      NoMinusExpr(
                        Terms(
                          NumberFactor(
                           10
                          ) [NumberFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [CondFactRelop]
                    MyNoCondTermList(
                    ) [MyNoCondTermList]
                  ) [CondTerms]
                  MyNoConditionList(
                  ) [MyNoConditionList]
                ) [Condition]
              ) [MyConditionFor]
              MyDesignatorStatementFor(
                DesignatorStatementINC(
                  Design(
                   x
                    Variable(
                    ) [Variable]
                  ) [Design]
                ) [DesignatorStatementINC]
              ) [MyDesignatorStatementFor]
              ForBody(
                StatementSTMT(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    StatementDesStat(
                      DesignatorStatementAssign(
                        DesAssStmtm(
                          Design(
                           arr
                            ArrayElem(
                              NoMinusExpr(
                                Terms(
                                  Var(
                                    Design(
                                     x
                                      Variable(
                                      ) [Variable]
                                    ) [Design]
                                  ) [Var]
                                  MyNoTermList(
                                  ) [MyNoTermList]
                                ) [Terms]
                                MyNoExprList(
                                ) [MyNoExprList]
                              ) [NoMinusExpr]
                            ) [ArrayElem]
                          ) [Design]
                          DesAssStmtCombOper(
                            Assign(
                            ) [Assign]
                          ) [DesAssStmtCombOper]
                          NoMinusExpr(
                            Terms(
                              FuncCallFactor(
                                FuncCallFactorDesignator(
                                  Design(
                                   chr
                                    Variable(
                                    ) [Variable]
                                  ) [Design]
                                ) [FuncCallFactorDesignator]
                                Actuals(
                                  ActualParam(
                                    NoMinusExpr(
                                      Terms(
                                        Var(
                                          Design(
                                           x
                                            Variable(
                                            ) [Variable]
                                          ) [Design]
                                        ) [Var]
                                        MyNoTermList(
                                        ) [MyNoTermList]
                                      ) [Terms]
                                      MyExprList(
                                        ExprListElems(
                                          ListAdd(
                                            AddLeft(
                                              Plus(
                                              ) [Plus]
                                            ) [AddLeft]
                                          ) [ListAdd]
                                          Terms(
                                            NumberFactor(
                                             65
                                            ) [NumberFactor]
                                            MyNoTermList(
                                            ) [MyNoTermList]
                                          ) [Terms]
                                        ) [ExprListElems]
                                        MyNoExprList(
                                        ) [MyNoExprList]
                                      ) [MyExprList]
                                    ) [NoMinusExpr]
                                  ) [ActualParam]
                                ) [Actuals]
                              ) [FuncCallFactor]
                              MyNoTermList(
                              ) [MyNoTermList]
                            ) [Terms]
                            MyNoExprList(
                            ) [MyNoExprList]
                          ) [NoMinusExpr]
                        ) [DesAssStmtm]
                      ) [DesignatorStatementAssign]
                    ) [StatementDesStat]
                  ) [Statements]
                ) [StatementSTMT]
              ) [ForBody]
            ) [StatementFor]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        NoMethodTypeNameVoid(
         init2
        ) [NoMethodTypeNameVoid]
        FormParams(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclBraces(
                Type(
                 int
                ) [Type]
               arr
              ) [FormalParamDeclBraces]
            ) [SingleFormalParamDecl]
            FormalParamDeclNoBraces(
              Type(
               int
              ) [Type]
             x
            ) [FormalParamDeclNoBraces]
          ) [FormalParamDecls]
        ) [FormParams]
        MyNoDeclListVar(
        ) [MyNoDeclListVar]
        Statements(
          NoStmt(
          ) [NoStmt]
          StatementFor(
            MyDesignatorForBegin(
              DesignatorStatementAssign(
                DesAssStmtm(
                  Design(
                   x
                    Variable(
                    ) [Variable]
                  ) [Design]
                  DesAssStmtCombOper(
                    Assign(
                    ) [Assign]
                  ) [DesAssStmtCombOper]
                  NoMinusExpr(
                    Terms(
                      NumberFactor(
                       0
                      ) [NumberFactor]
                      MyNoTermList(
                      ) [MyNoTermList]
                    ) [Terms]
                    MyNoExprList(
                    ) [MyNoExprList]
                  ) [NoMinusExpr]
                ) [DesAssStmtm]
              ) [DesignatorStatementAssign]
            ) [MyDesignatorForBegin]
            MyConditionFor(
              Condition(
                CondTerms(
                  CondFactRelop(
                    NoMinusExpr(
                      Terms(
                        Var(
                          Design(
                           x
                            Variable(
                            ) [Variable]
                          ) [Design]
                        ) [Var]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                    Smaller(
                    ) [Smaller]
                    NoMinusExpr(
                      Terms(
                        NumberFactor(
                         100
                        ) [NumberFactor]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [CondFactRelop]
                  MyNoCondTermList(
                  ) [MyNoCondTermList]
                ) [CondTerms]
                MyNoConditionList(
                ) [MyNoConditionList]
              ) [Condition]
            ) [MyConditionFor]
            MyDesignatorStatementFor(
              DesignatorStatementINC(
                Design(
                 x
                  Variable(
                  ) [Variable]
                ) [Design]
              ) [DesignatorStatementINC]
            ) [MyDesignatorStatementFor]
            ForBody(
              StatementSTMT(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  StatementDesStat(
                    DesignatorStatementAssign(
                      DesAssStmtm(
                        Design(
                         arr
                          ArrayElem(
                            NoMinusExpr(
                              Terms(
                                Var(
                                  Design(
                                   x
                                    Variable(
                                    ) [Variable]
                                  ) [Design]
                                ) [Var]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyNoExprList(
                              ) [MyNoExprList]
                            ) [NoMinusExpr]
                          ) [ArrayElem]
                        ) [Design]
                        DesAssStmtCombOper(
                          Assign(
                          ) [Assign]
                        ) [DesAssStmtCombOper]
                        NoMinusExpr(
                          Terms(
                            NumberFactor(
                             1
                            ) [NumberFactor]
                            MyNoTermList(
                            ) [MyNoTermList]
                          ) [Terms]
                          MyNoExprList(
                          ) [MyNoExprList]
                        ) [NoMinusExpr]
                      ) [DesAssStmtm]
                    ) [DesignatorStatementAssign]
                  ) [StatementDesStat]
                ) [Statements]
              ) [StatementSTMT]
            ) [ForBody]
          ) [StatementFor]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      NoMethodTypeNameVoid(
       main
      ) [NoMethodTypeNameVoid]
      NoFormParam(
      ) [NoFormParam]
      MyDeclListVar(
        MyDeclListVar(
          MyDeclListVar(
            MyDeclListVar(
              MyNoDeclListVar(
              ) [MyNoDeclListVar]
              VarDecl(
                VarDeclType(
                  Type(
                   char
                  ) [Type]
                ) [VarDeclType]
                VarDeclElemNoBraces(
                 c
                ) [VarDeclElemNoBraces]
                MyNoVarDeclList(
                ) [MyNoVarDeclList]
              ) [VarDecl]
            ) [MyDeclListVar]
            VarDecl(
              VarDeclType(
                Type(
                 bool
                ) [Type]
              ) [VarDeclType]
              VarDeclElemNoBraces(
               b
              ) [VarDeclElemNoBraces]
              MyNoVarDeclList(
              ) [MyNoVarDeclList]
            ) [VarDecl]
          ) [MyDeclListVar]
          VarDecl(
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            VarDeclElemNoBraces(
             x
            ) [VarDeclElemNoBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [MyDeclListVar]
        VarDecl(
          VarDeclType(
            Type(
             int
            ) [Type]
          ) [VarDeclType]
          VarDeclElemNoBraces(
           z
          ) [VarDeclElemNoBraces]
          MyNoVarDeclList(
          ) [MyNoVarDeclList]
        ) [VarDecl]
      ) [MyDeclListVar]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                StatementDesStat(
                  DesignatorStatementAssign(
                    DesAssStmtm(
                      Design(
                       arr
                        Variable(
                        ) [Variable]
                      ) [Design]
                      DesAssStmtCombOper(
                        Assign(
                        ) [Assign]
                      ) [DesAssStmtCombOper]
                      NoMinusExpr(
                        Terms(
                          NewFactor(
                            Type(
                             char
                            ) [Type]
                            NoMinusExpr(
                              Terms(
                                NumberFactor(
                                 10
                                ) [NumberFactor]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyNoExprList(
                              ) [MyNoExprList]
                            ) [NoMinusExpr]
                          ) [NewFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [DesAssStmtm]
                  ) [DesignatorStatementAssign]
                ) [StatementDesStat]
              ) [Statements]
              StatementDesStat(
                DesignatorStatementFuncCall(
                  DesStmtFuncCallDesignator(
                    Design(
                     init
                      Variable(
                      ) [Variable]
                    ) [Design]
                  ) [DesStmtFuncCallDesignator]
                  Actuals(
                    ActualParams(
                      ActualParam(
                        NoMinusExpr(
                          Terms(
                            Var(
                              Design(
                               arr
                                Variable(
                                ) [Variable]
                              ) [Design]
                            ) [Var]
                            MyNoTermList(
                            ) [MyNoTermList]
                          ) [Terms]
                          MyNoExprList(
                          ) [MyNoExprList]
                        ) [NoMinusExpr]
                      ) [ActualParam]
                      NoMinusExpr(
                        Terms(
                          Var(
                            Design(
                             x
                              Variable(
                              ) [Variable]
                            ) [Design]
                          ) [Var]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [ActualParams]
                  ) [Actuals]
                ) [DesignatorStatementFuncCall]
              ) [StatementDesStat]
            ) [Statements]
            StatementDesStat(
              DesignatorStatementFuncCall(
                DesStmtFuncCallDesignator(
                  Design(
                   init2
                    Variable(
                    ) [Variable]
                  ) [Design]
                ) [DesStmtFuncCallDesignator]
                Actuals(
                  ActualParams(
                    ActualParam(
                      NoMinusExpr(
                        Terms(
                          Var(
                            Design(
                             arr2
                              Variable(
                              ) [Variable]
                            ) [Design]
                          ) [Var]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [ActualParam]
                    NoMinusExpr(
                      Terms(
                        Var(
                          Design(
                           x
                            Variable(
                            ) [Variable]
                          ) [Design]
                        ) [Var]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [ActualParams]
                ) [Actuals]
              ) [DesignatorStatementFuncCall]
            ) [StatementDesStat]
          ) [Statements]
          StatementForeach(
            ForEachIndexName(
             c
            ) [ForEachIndexName]
            ForEachDesignator(
              Design(
               arr
                Variable(
                ) [Variable]
              ) [Design]
            ) [ForEachDesignator]
            ForEachBody(
              StatementSTMT(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      StatementForeach(
                        ForEachIndexName(
                         x
                        ) [ForEachIndexName]
                        ForEachDesignator(
                          Design(
                           arr2
                            Variable(
                            ) [Variable]
                          ) [Design]
                        ) [ForEachDesignator]
                        ForEachBody(
                          StatementSTMT(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              StatementDesStat(
                                DesignatorStatementINC(
                                  Design(
                                   y
                                    Variable(
                                    ) [Variable]
                                  ) [Design]
                                ) [DesignatorStatementINC]
                              ) [StatementDesStat]
                            ) [Statements]
                          ) [StatementSTMT]
                        ) [ForEachBody]
                      ) [StatementForeach]
                    ) [Statements]
                    StatementPrint(
                      NoMinusExpr(
                        Terms(
                          Var(
                            Design(
                             c
                              Variable(
                              ) [Variable]
                            ) [Design]
                          ) [Var]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [StatementPrint]
                  ) [Statements]
                  StatementPrint(
                    NoMinusExpr(
                      Terms(
                        Var(
                          Design(
                           eol
                            Variable(
                            ) [Variable]
                          ) [Design]
                        ) [Var]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [StatementPrint]
                ) [Statements]
              ) [StatementSTMT]
            ) [ForEachBody]
          ) [StatementForeach]
        ) [Statements]
        StatementPrint(
          NoMinusExpr(
            Terms(
              Var(
                Design(
                 y
                  Variable(
                  ) [Variable]
                ) [Design]
              ) [Var]
              MyNoTermList(
              ) [MyNoTermList]
            ) [Terms]
            MyNoExprList(
            ) [MyNoExprList]
          ) [NoMinusExpr]
        ) [StatementPrint]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  06:02:17,659 - ===================================
INFO  06:02:17,675 - Deklarisana promenljiva x na liniji 2
INFO  06:02:17,675 - Deklarisana promenljiva y na liniji 2
INFO  06:02:17,675 - Deklarisana promenljiva arr na liniji 3
INFO  06:02:17,675 - Deklarisana promenljiva arr2 na liniji 4
INFO  06:02:17,675 - Obradjuje se funkcija bez return iskaza init na liniji 8
INFO  06:02:17,675 - Deklarisan formalni parametar arr funkcije:init na liniji 8
INFO  06:02:17,675 - Deklarisan formalni parametar x funkcije:init na liniji 8
INFO  06:02:17,675 - Detektovan pristup elementu niza:  arr na liniji 10 na liniji 10
INFO  06:02:17,675 - Obradjuje se funkcija bez return iskaza init2 na liniji 14
INFO  06:02:17,675 - Deklarisan formalni parametar arr funkcije:init2 na liniji 14
INFO  06:02:17,675 - Deklarisan formalni parametar x funkcije:init2 na liniji 14
INFO  06:02:17,675 - Detektovan pristup elementu niza:  arr na liniji 16 na liniji 16
INFO  06:02:17,675 - Obradjuje se funkcija bez return iskaza main na liniji 20
INFO  06:02:17,675 - Deklarisana promenljiva c na liniji 20
INFO  06:02:17,675 - Deklarisana promenljiva b na liniji 20
INFO  06:02:17,675 - Deklarisana promenljiva x na liniji 20
INFO  06:02:17,675 - Deklarisana promenljiva z na liniji 20
INFO  06:02:17,675 - Detektovan pristup globalnoj promenljivoj:   arr na liniji 23 na liniji 23
INFO  06:02:17,675 - Detektovan pristup globalnoj promenljivoj:   arr na liniji 25 na liniji 25
INFO  06:02:17,675 - Detektovan pristup globalnoj promenljivoj:   arr2 na liniji 26 na liniji 26
INFO  06:02:17,675 - Detektovan pristup globalnoj promenljivoj:   arr na liniji 28 na liniji 28
INFO  06:02:17,675 - Detektovan pristup globalnoj promenljivoj:   arr2 na liniji 29 na liniji 29
INFO  06:02:17,675 - Detektovan pristup globalnoj promenljivoj:   y na liniji 30 na liniji 30
INFO  06:02:17,690 - Detektovan pristup simbolickoj konstanti:   eol na liniji 33 na liniji 33
INFO  06:02:17,690 - Detektovan pristup globalnoj promenljivoj:   y na liniji 37 na liniji 37
INFO  06:02:17,690 -  Print count calls = 3
INFO  06:02:17,690 -  Deklarisanih promenljivih ima = 8
INFO  06:02:17,690 - ===================================
INFO  06:02:17,697 - Parsiranje uspesno zavrseno!
