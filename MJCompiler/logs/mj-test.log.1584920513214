INFO  00:41:05,565 - Compiling source file: D:\faks\zorana\4.Godina-1.Semestar\pp1\projekat\MJCompiler_jz160143\workspace\MJCompiler\test\parserProgramArray.mj
INFO  00:41:05,623 - #2 program
INFO  00:41:05,623 - #15 ParserTestArrays
INFO  00:41:05,623 - #15 int
INFO  00:41:05,624 - #15 numbers
INFO  00:41:05,625 - #44 [
INFO  00:41:05,625 - #45 ]
INFO  00:41:05,625 - #5 ;
INFO  00:41:05,626 - #15 char
INFO  00:41:05,627 - #15 characters
INFO  00:41:05,628 - #44 [
INFO  00:41:05,628 - #45 ]
INFO  00:41:05,628 - #5 ;
INFO  00:41:05,628 - #15 bool
INFO  00:41:05,628 - #15 bools
INFO  00:41:05,628 - #44 [
INFO  00:41:05,628 - #45 ]
INFO  00:41:05,628 - #5 ;
INFO  00:41:05,628 - #3 {
INFO  00:41:05,628 - #15 int
INFO  00:41:05,630 - #15 k
INFO  00:41:05,630 - #6 (
INFO  00:41:05,630 - #7 )
INFO  00:41:05,631 - #15 int
INFO  00:41:05,631 - #15 y
INFO  00:41:05,631 - #44 [
INFO  00:41:05,631 - #45 ]
INFO  00:41:05,632 - #5 ;
INFO  00:41:05,632 - #3 {
INFO  00:41:05,632 - #15 y
INFO  00:41:05,632 - #8 =
INFO  00:41:05,633 - #24 new
INFO  00:41:05,634 - #15 int
INFO  00:41:05,634 - #44 [
INFO  00:41:05,634 - #14 10
INFO  00:41:05,634 - #45 ]
INFO  00:41:05,636 - #5 ;
INFO  00:41:05,636 - #15 y
INFO  00:41:05,637 - #44 [
INFO  00:41:05,637 - #14 1
INFO  00:41:05,637 - #45 ]
INFO  00:41:05,637 - #8 =
INFO  00:41:05,637 - #14 6
INFO  00:41:05,637 - #5 ;
INFO  00:41:05,637 - #15 y
INFO  00:41:05,637 - #44 [
INFO  00:41:05,637 - #14 2
INFO  00:41:05,637 - #45 ]
INFO  00:41:05,637 - #41 ++
INFO  00:41:05,637 - #5 ;
INFO  00:41:05,637 - #15 numbers
INFO  00:41:05,638 - #44 [
INFO  00:41:05,638 - #14 6
INFO  00:41:05,638 - #45 ]
INFO  00:41:05,638 - #42 --
INFO  00:41:05,638 - #5 ;
INFO  00:41:05,638 - #25 read
INFO  00:41:05,638 - #6 (
INFO  00:41:05,638 - #15 bools
INFO  00:41:05,641 - #44 [
INFO  00:41:05,641 - #14 1
INFO  00:41:05,642 - #45 ]
INFO  00:41:05,642 - #7 )
INFO  00:41:05,642 - #5 ;
INFO  00:41:05,642 - #11 print
INFO  00:41:05,642 - #6 (
INFO  00:41:05,642 - #15 bools
INFO  00:41:05,642 - #44 [
INFO  00:41:05,642 - #14 3
INFO  00:41:05,642 - #45 ]
INFO  00:41:05,642 - #7 )
INFO  00:41:05,643 - #5 ;
INFO  00:41:05,643 - #11 print
INFO  00:41:05,643 - #6 (
INFO  00:41:05,643 - #15 numbers
INFO  00:41:05,643 - #44 [
INFO  00:41:05,643 - #14 2
INFO  00:41:05,643 - #45 ]
INFO  00:41:05,643 - #12 ,
INFO  00:41:05,643 - #15 numbers
ERROR 00:41:05,643 - 
Sintaksna greska na liniji 16
INFO  00:41:05,643 - #44 [
INFO  00:41:05,643 - #14 1
INFO  00:41:05,644 - #45 ]
INFO  00:41:05,644 - #7 )
INFO  00:41:05,644 - #5 ;
INFO  00:41:05,644 - #15 p
INFO  00:41:05,644 - #8 =
INFO  00:41:05,644 - #29 -
ERROR 00:41:05,644 - Izvrsen oporavak do ; u liniji 18
INFO  00:41:05,645 - #15 numConst
INFO  00:41:05,645 - #29 -
INFO  00:41:05,645 - #15 x
INFO  00:41:05,646 - #10 +
INFO  00:41:05,647 - #15 y
INFO  00:41:05,647 - #30 *
INFO  00:41:05,647 - #15 numConst
INFO  00:41:05,648 - #30 *
INFO  00:41:05,648 - #14 10
INFO  00:41:05,648 - #5 ;
INFO  00:41:05,649 - #9 return
INFO  00:41:05,649 - #15 p
INFO  00:41:05,649 - #5 ;
INFO  00:41:05,649 - #4 }
INFO  00:41:05,649 - #13 void
INFO  00:41:05,650 - #15 main
INFO  00:41:05,650 - #6 (
INFO  00:41:05,650 - #7 )
INFO  00:41:05,650 - #3 {
INFO  00:41:05,650 - #15 y
INFO  00:41:05,650 - #8 =
INFO  00:41:05,650 - #14 5
INFO  00:41:05,650 - #5 ;
INFO  00:41:05,650 - #15 k
INFO  00:41:05,650 - #6 (
INFO  00:41:05,650 - #7 )
INFO  00:41:05,651 - #5 ;
INFO  00:41:05,651 - #15 y
INFO  00:41:05,651 - #8 =
INFO  00:41:05,651 - #15 k
INFO  00:41:05,651 - #6 (
INFO  00:41:05,651 - #7 )
INFO  00:41:05,652 - #5 ;
INFO  00:41:05,652 - #15 y
INFO  00:41:05,652 - #8 =
INFO  00:41:05,652 - #15 y
INFO  00:41:05,652 - #32 %
INFO  00:41:05,653 - #14 10
INFO  00:41:05,653 - #5 ;
INFO  00:41:05,653 - #15 uslov
INFO  00:41:05,653 - #8 =
INFO  00:41:05,653 - #16 false
INFO  00:41:05,653 - #5 ;
INFO  00:41:05,654 - #9 return
INFO  00:41:05,654 - #5 ;
INFO  00:41:05,654 - #4 }
INFO  00:41:05,654 - #4 }
INFO  00:41:05,669 - Program(
  ProgName(
   ParserTestArrays
  ) [ProgName]
  MyDeclList(
    MyDeclList(
      MyDeclList(
        MyNoDeclList(
        ) [MyNoDeclList]
        VarDeclListElem(
          VarDecl(
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            VarDeclElemBraces(
             numbers
            ) [VarDeclElemBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [VarDeclListElem]
      ) [MyDeclList]
      VarDeclListElem(
        VarDecl(
          VarDeclType(
            Type(
             char
            ) [Type]
          ) [VarDeclType]
          VarDeclElemBraces(
           characters
          ) [VarDeclElemBraces]
          MyNoVarDeclList(
          ) [MyNoVarDeclList]
        ) [VarDecl]
      ) [VarDeclListElem]
    ) [MyDeclList]
    VarDeclListElem(
      VarDecl(
        VarDeclType(
          Type(
           bool
          ) [Type]
        ) [VarDeclType]
        VarDeclElemBraces(
         bools
        ) [VarDeclElemBraces]
        MyNoVarDeclList(
        ) [MyNoVarDeclList]
      ) [VarDecl]
    ) [VarDeclListElem]
  ) [MyDeclList]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeNameRet(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeNameRet]
        NoFormParam(
        ) [NoFormParam]
        MyDeclListVar(
          MyNoDeclListVar(
          ) [MyNoDeclListVar]
          VarDecl(
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            VarDeclElemBraces(
             y
            ) [VarDeclElemBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [MyDeclListVar]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          StatementDesStat(
                            DesignatorStatementAssign(
                              DesAssStmtm(
                                Design(
                                 y
                                  Variable(
                                  ) [Variable]
                                ) [Design]
                                Assign(
                                ) [Assign]
                                NoMinusExpr(
                                  Terms(
                                    NewFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      NoMinusExpr(
                                        Terms(
                                          NumberFactor(
                                           10
                                          ) [NumberFactor]
                                          MyNoTermList(
                                          ) [MyNoTermList]
                                        ) [Terms]
                                        MyNoExprList(
                                        ) [MyNoExprList]
                                      ) [NoMinusExpr]
                                    ) [NewFactor]
                                    MyNoTermList(
                                    ) [MyNoTermList]
                                  ) [Terms]
                                  MyNoExprList(
                                  ) [MyNoExprList]
                                ) [NoMinusExpr]
                              ) [DesAssStmtm]
                            ) [DesignatorStatementAssign]
                          ) [StatementDesStat]
                        ) [Statements]
                        StatementDesStat(
                          DesignatorStatementAssign(
                            DesAssStmtm(
                              Design(
                               y
                                ArrayElem(
                                  NoMinusExpr(
                                    Terms(
                                      NumberFactor(
                                       1
                                      ) [NumberFactor]
                                      MyNoTermList(
                                      ) [MyNoTermList]
                                    ) [Terms]
                                    MyNoExprList(
                                    ) [MyNoExprList]
                                  ) [NoMinusExpr]
                                ) [ArrayElem]
                              ) [Design]
                              Assign(
                              ) [Assign]
                              NoMinusExpr(
                                Terms(
                                  NumberFactor(
                                   6
                                  ) [NumberFactor]
                                  MyNoTermList(
                                  ) [MyNoTermList]
                                ) [Terms]
                                MyNoExprList(
                                ) [MyNoExprList]
                              ) [NoMinusExpr]
                            ) [DesAssStmtm]
                          ) [DesignatorStatementAssign]
                        ) [StatementDesStat]
                      ) [Statements]
                      StatementDesStat(
                        DesignatorStatementINC(
                          Design(
                           y
                            ArrayElem(
                              NoMinusExpr(
                                Terms(
                                  NumberFactor(
                                   2
                                  ) [NumberFactor]
                                  MyNoTermList(
                                  ) [MyNoTermList]
                                ) [Terms]
                                MyNoExprList(
                                ) [MyNoExprList]
                              ) [NoMinusExpr]
                            ) [ArrayElem]
                          ) [Design]
                        ) [DesignatorStatementINC]
                      ) [StatementDesStat]
                    ) [Statements]
                    StatementDesStat(
                      DesignatorStatementDEC(
                        Design(
                         numbers
                          ArrayElem(
                            NoMinusExpr(
                              Terms(
                                NumberFactor(
                                 6
                                ) [NumberFactor]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyNoExprList(
                              ) [MyNoExprList]
                            ) [NoMinusExpr]
                          ) [ArrayElem]
                        ) [Design]
                      ) [DesignatorStatementDEC]
                    ) [StatementDesStat]
                  ) [Statements]
                  StatementRead(
                    Design(
                     bools
                      ArrayElem(
                        NoMinusExpr(
                          Terms(
                            NumberFactor(
                             1
                            ) [NumberFactor]
                            MyNoTermList(
                            ) [MyNoTermList]
                          ) [Terms]
                          MyNoExprList(
                          ) [MyNoExprList]
                        ) [NoMinusExpr]
                      ) [ArrayElem]
                    ) [Design]
                  ) [StatementRead]
                ) [Statements]
                StatementPrint(
                  NoMinusExpr(
                    Terms(
                      Var(
                        Design(
                         bools
                          ArrayElem(
                            NoMinusExpr(
                              Terms(
                                NumberFactor(
                                 3
                                ) [NumberFactor]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyNoExprList(
                              ) [MyNoExprList]
                            ) [NoMinusExpr]
                          ) [ArrayElem]
                        ) [Design]
                      ) [Var]
                      MyNoTermList(
                      ) [MyNoTermList]
                    ) [Terms]
                    MyNoExprList(
                    ) [MyNoExprList]
                  ) [NoMinusExpr]
                ) [StatementPrint]
              ) [Statements]
              StatementDesStat(
                DesignatorStatementAssign(
                  ErrorDesAssStmtm(
                  ) [ErrorDesAssStmtm]
                ) [DesignatorStatementAssign]
              ) [StatementDesStat]
            ) [Statements]
            StatementDesStat(
              DesignatorStatementAssign(
                DesAssStmtm(
                  Design(
                   p
                    Variable(
                    ) [Variable]
                  ) [Design]
                  Assign(
                  ) [Assign]
                  MinusExpr(
                    Terms(
                      Var(
                        Design(
                         numConst
                          Variable(
                          ) [Variable]
                        ) [Design]
                      ) [Var]
                      MyNoTermList(
                      ) [MyNoTermList]
                    ) [Terms]
                    MyExprList(
                      MyExprList(
                        MyNoExprList(
                        ) [MyNoExprList]
                        ExprListElems(
                          Minus(
                          ) [Minus]
                          Terms(
                            Var(
                              Design(
                               x
                                Variable(
                                ) [Variable]
                              ) [Design]
                            ) [Var]
                            MyNoTermList(
                            ) [MyNoTermList]
                          ) [Terms]
                        ) [ExprListElems]
                      ) [MyExprList]
                      ExprListElems(
                        Plus(
                        ) [Plus]
                        Terms(
                          Var(
                            Design(
                             y
                              Variable(
                              ) [Variable]
                            ) [Design]
                          ) [Var]
                          MyTermList(
                            MyTermList(
                              MyNoTermList(
                              ) [MyNoTermList]
                              TermListElems(
                                Mul(
                                ) [Mul]
                                Var(
                                  Design(
                                   numConst
                                    Variable(
                                    ) [Variable]
                                  ) [Design]
                                ) [Var]
                              ) [TermListElems]
                            ) [MyTermList]
                            TermListElems(
                              Mul(
                              ) [Mul]
                              NumberFactor(
                               10
                              ) [NumberFactor]
                            ) [TermListElems]
                          ) [MyTermList]
                        ) [Terms]
                      ) [ExprListElems]
                    ) [MyExprList]
                  ) [MinusExpr]
                ) [DesAssStmtm]
              ) [DesignatorStatementAssign]
            ) [StatementDesStat]
          ) [Statements]
          StatementReturnExpr(
            NoMinusExpr(
              Terms(
                Var(
                  Design(
                   p
                    Variable(
                    ) [Variable]
                  ) [Design]
                ) [Var]
                MyNoTermList(
                ) [MyNoTermList]
              ) [Terms]
              MyNoExprList(
              ) [MyNoExprList]
            ) [NoMinusExpr]
          ) [StatementReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      NoMethodTypeNameVoid(
       main
      ) [NoMethodTypeNameVoid]
      NoFormParam(
      ) [NoFormParam]
      MyNoDeclListVar(
      ) [MyNoDeclListVar]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  StatementDesStat(
                    DesignatorStatementAssign(
                      DesAssStmtm(
                        Design(
                         y
                          Variable(
                          ) [Variable]
                        ) [Design]
                        Assign(
                        ) [Assign]
                        NoMinusExpr(
                          Terms(
                            NumberFactor(
                             5
                            ) [NumberFactor]
                            MyNoTermList(
                            ) [MyNoTermList]
                          ) [Terms]
                          MyNoExprList(
                          ) [MyNoExprList]
                        ) [NoMinusExpr]
                      ) [DesAssStmtm]
                    ) [DesignatorStatementAssign]
                  ) [StatementDesStat]
                ) [Statements]
                StatementDesStat(
                  DesignatorStatementFuncCall(
                    Design(
                     k
                      Variable(
                      ) [Variable]
                    ) [Design]
                    NoActuals(
                    ) [NoActuals]
                  ) [DesignatorStatementFuncCall]
                ) [StatementDesStat]
              ) [Statements]
              StatementDesStat(
                DesignatorStatementAssign(
                  DesAssStmtm(
                    Design(
                     y
                      Variable(
                      ) [Variable]
                    ) [Design]
                    Assign(
                    ) [Assign]
                    NoMinusExpr(
                      Terms(
                        FuncCallFactor(
                          Design(
                           k
                            Variable(
                            ) [Variable]
                          ) [Design]
                          NoActuals(
                          ) [NoActuals]
                        ) [FuncCallFactor]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [DesAssStmtm]
                ) [DesignatorStatementAssign]
              ) [StatementDesStat]
            ) [Statements]
            StatementDesStat(
              DesignatorStatementAssign(
                DesAssStmtm(
                  Design(
                   y
                    Variable(
                    ) [Variable]
                  ) [Design]
                  Assign(
                  ) [Assign]
                  NoMinusExpr(
                    Terms(
                      Var(
                        Design(
                         y
                          Variable(
                          ) [Variable]
                        ) [Design]
                      ) [Var]
                      MyTermList(
                        MyNoTermList(
                        ) [MyNoTermList]
                        TermListElems(
                          Mod(
                          ) [Mod]
                          NumberFactor(
                           10
                          ) [NumberFactor]
                        ) [TermListElems]
                      ) [MyTermList]
                    ) [Terms]
                    MyNoExprList(
                    ) [MyNoExprList]
                  ) [NoMinusExpr]
                ) [DesAssStmtm]
              ) [DesignatorStatementAssign]
            ) [StatementDesStat]
          ) [Statements]
          StatementDesStat(
            DesignatorStatementAssign(
              DesAssStmtm(
                Design(
                 uslov
                  Variable(
                  ) [Variable]
                ) [Design]
                Assign(
                ) [Assign]
                NoMinusExpr(
                  Terms(
                    BoolFactor(
                     false
                    ) [BoolFactor]
                    MyNoTermList(
                    ) [MyNoTermList]
                  ) [Terms]
                  MyNoExprList(
                  ) [MyNoExprList]
                ) [NoMinusExpr]
              ) [DesAssStmtm]
            ) [DesignatorStatementAssign]
          ) [StatementDesStat]
        ) [Statements]
        StatementNoReturnExpr(
        ) [StatementNoReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:41:05,670 - ===================================
INFO  00:41:05,674 - Deklarisana promenljiva numbers na liniji 2
INFO  00:41:05,675 - Deklarisana promenljiva characters na liniji 3
INFO  00:41:05,675 - Deklarisana promenljiva bools na liniji 4
INFO  00:41:05,675 - Obradjuje se funkcija sa return iskazom k na liniji 9
INFO  00:41:05,675 - Deklarisana promenljiva y na liniji 9
ERROR 00:41:05,675 - Greska na liniji 11 Designator mora oznacavati promenljivu, element niza ili polje unutar objekta
ERROR 00:41:05,675 - Greska na liniji 12 Designator mora oznacavati promenljivu, element niza ili polje unutar objekta
ERROR 00:41:05,675 - Greska na liniji 13 Designator mora oznacavati promenljivu, element niza ili polje unutar objekta
ERROR 00:41:05,675 - Greska na liniji 14 Designator mora oznacavati promenljivu, element niza ili polje unutar objekta
ERROR 00:41:05,675 - Greska na liniji 18 : ime p nije deklarisano! 
ERROR 00:41:05,675 - Greska na liniji 18 : ime numConst nije deklarisano! 
ERROR 00:41:05,675 - Greska na liniji 18 : ime x nije deklarisano! 
ERROR 00:41:05,675 - Greska na liniji 18 Term mora biti tipa int!
ERROR 00:41:05,675 - Greska na liniji 18 : ime numConst nije deklarisano! 
ERROR 00:41:05,676 - Greska na liniji 18 Factor mora biti tipa int!
ERROR 00:41:05,676 - Greska na liniji 18 Term mora biti tipa int!
ERROR 00:41:05,676 - Greska na liniji 18 Term mora biti tipa int!
ERROR 00:41:05,676 - Greska na liniji 20 : ime p nije deklarisano! 
ERROR 00:41:05,676 - Greska na liniji 20 : tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije k
INFO  00:41:05,676 - Obradjuje se funkcija bez return iskaza main na liniji 23
ERROR 00:41:05,676 - Greska na liniji 25 : ime y nije deklarisano! 
ERROR 00:41:05,676 - Greska na liniji 25 Tip designatora kome se dodeljuje vrednost mora biti kompatibilan sa tipom vrednosti koja mu se dodeljuje!
ERROR 00:41:05,676 - Greska na liniji 28 : ime y nije deklarisano! 
ERROR 00:41:05,676 - Greska na liniji 28 Tip designatora kome se dodeljuje vrednost mora biti kompatibilan sa tipom vrednosti koja mu se dodeljuje!
ERROR 00:41:05,676 - Greska na liniji 30 : ime y nije deklarisano! 
ERROR 00:41:05,676 - Greska na liniji 30 : ime y nije deklarisano! 
ERROR 00:41:05,677 - Greska na liniji 32 : ime uslov nije deklarisano! 
ERROR 00:41:05,677 - Greska na liniji 32 Tip designatora kome se dodeljuje vrednost mora biti kompatibilan sa tipom vrednosti koja mu se dodeljuje!
INFO  00:41:05,677 -  Print count calls = 1
INFO  00:41:05,677 -  Deklarisanih promenljivih ima = 4
INFO  00:41:05,677 - ===================================
ERROR 00:41:05,678 - Parsiranje NIJE uspesno zavrseno!
