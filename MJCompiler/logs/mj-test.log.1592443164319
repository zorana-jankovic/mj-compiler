INFO  03:19:09,787 - Compiling source file: D:\faks\zorana\4.Godina-1.Semestar\pp1\projekat\MJCompiler_jz160143\workspace\MJCompiler\test\testMod.mj
INFO  03:19:09,858 - #2 program
INFO  03:19:09,858 - #15 MJProgram
INFO  03:19:09,858 - #15 int
INFO  03:19:09,859 - #15 x
INFO  03:19:09,860 - #5 ;
INFO  03:19:09,862 - #15 int
INFO  03:19:09,862 - #15 y
INFO  03:19:09,862 - #5 ;
INFO  03:19:09,863 - #15 int
INFO  03:19:09,863 - #15 arr
INFO  03:19:09,863 - #44 [
INFO  03:19:09,863 - #45 ]
INFO  03:19:09,863 - #5 ;
INFO  03:19:09,863 - #3 {
INFO  03:19:09,863 - #13 void
INFO  03:19:09,864 - #15 k
INFO  03:19:09,864 - #6 (
INFO  03:19:09,864 - #7 )
INFO  03:19:09,864 - #3 {
INFO  03:19:09,865 - #15 x
INFO  03:19:09,865 - #41 ++
INFO  03:19:09,870 - #5 ;
INFO  03:19:09,871 - #4 }
INFO  03:19:09,871 - #15 int
INFO  03:19:09,871 - #15 f1
INFO  03:19:09,872 - #6 (
INFO  03:19:09,872 - #7 )
INFO  03:19:09,872 - #3 {
INFO  03:19:09,872 - #9 return
INFO  03:19:09,872 - #14 10
INFO  03:19:09,872 - #5 ;
INFO  03:19:09,874 - #4 }
INFO  03:19:09,874 - #13 void
INFO  03:19:09,874 - #15 main
INFO  03:19:09,874 - #6 (
INFO  03:19:09,874 - #7 )
INFO  03:19:09,875 - #15 char
INFO  03:19:09,875 - #15 c
INFO  03:19:09,875 - #5 ;
INFO  03:19:09,875 - #15 bool
INFO  03:19:09,875 - #15 b
INFO  03:19:09,875 - #5 ;
INFO  03:19:09,875 - #15 int
INFO  03:19:09,875 - #15 x
INFO  03:19:09,876 - #5 ;
INFO  03:19:09,876 - #3 {
INFO  03:19:09,876 - #15 arr
INFO  03:19:09,876 - #8 =
INFO  03:19:09,876 - #24 new
INFO  03:19:09,879 - #15 int
INFO  03:19:09,879 - #44 [
INFO  03:19:09,879 - #14 10
INFO  03:19:09,879 - #45 ]
INFO  03:19:09,879 - #5 ;
INFO  03:19:09,880 - #26 for
INFO  03:19:09,880 - #6 (
INFO  03:19:09,880 - #15 x
INFO  03:19:09,880 - #8 =
INFO  03:19:09,885 - #14 0
INFO  03:19:09,885 - #5 ;
INFO  03:19:09,885 - #15 x
INFO  03:19:09,885 - #37 <
INFO  03:19:09,886 - #14 10
INFO  03:19:09,887 - #5 ;
INFO  03:19:09,888 - #15 x
INFO  03:19:09,888 - #41 ++
INFO  03:19:09,888 - #7 )
INFO  03:19:09,889 - #3 {
INFO  03:19:09,889 - #15 arr
INFO  03:19:09,889 - #44 [
INFO  03:19:09,889 - #15 x
INFO  03:19:09,889 - #45 ]
INFO  03:19:09,889 - #8 =
INFO  03:19:09,889 - #15 x
INFO  03:19:09,889 - #10 +
INFO  03:19:09,889 - #14 1
INFO  03:19:09,890 - #5 ;
INFO  03:19:09,891 - #4 }
INFO  03:19:09,891 - #15 x
INFO  03:19:09,892 - #8 =
INFO  03:19:09,892 - #15 arr
INFO  03:19:09,892 - #56 @
INFO  03:19:09,892 - #14 5
INFO  03:19:09,892 - #5 ;
INFO  03:19:09,892 - #11 print
INFO  03:19:09,892 - #6 (
INFO  03:19:09,893 - #15 x
INFO  03:19:09,893 - #7 )
INFO  03:19:09,893 - #5 ;
INFO  03:19:09,893 - #4 }
INFO  03:19:09,893 - #4 }
INFO  03:19:09,908 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  MyDeclList(
    MyDeclList(
      MyDeclList(
        MyNoDeclList(
        ) [MyNoDeclList]
        VarDeclListElem(
          VarDecl(
            NoRights(
            ) [NoRights]
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            VarDeclElemNoBraces(
             x
            ) [VarDeclElemNoBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [VarDeclListElem]
      ) [MyDeclList]
      VarDeclListElem(
        VarDecl(
          NoRights(
          ) [NoRights]
          VarDeclType(
            Type(
             int
            ) [Type]
          ) [VarDeclType]
          VarDeclElemNoBraces(
           y
          ) [VarDeclElemNoBraces]
          MyNoVarDeclList(
          ) [MyNoVarDeclList]
        ) [VarDecl]
      ) [VarDeclListElem]
    ) [MyDeclList]
    VarDeclListElem(
      VarDecl(
        NoRights(
        ) [NoRights]
        VarDeclType(
          Type(
           int
          ) [Type]
        ) [VarDeclType]
        VarDeclElemBraces(
         arr
        ) [VarDeclElemBraces]
        MyNoVarDeclList(
        ) [MyNoVarDeclList]
      ) [VarDecl]
    ) [VarDeclListElem]
  ) [MyDeclList]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          NoRights(
          ) [NoRights]
          NoMethodTypeNameVoid(
           k
          ) [NoMethodTypeNameVoid]
          NoFormParam(
          ) [NoFormParam]
          MyNoDeclListVar(
          ) [MyNoDeclListVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            StatementDesStat(
              DesignatorStatementINC(
                Design(
                  DesignatorIdent(
                   x
                  ) [DesignatorIdent]
                  MyNoDesignatorElemList(
                  ) [MyNoDesignatorElemList]
                ) [Design]
              ) [DesignatorStatementINC]
            ) [StatementDesStat]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        NoRights(
        ) [NoRights]
        MethodTypeNameRet(
          Type(
           int
          ) [Type]
         f1
        ) [MethodTypeNameRet]
        NoFormParam(
        ) [NoFormParam]
        MyNoDeclListVar(
        ) [MyNoDeclListVar]
        Statements(
          NoStmt(
          ) [NoStmt]
          StatementReturnExpr(
            NoMinusExpr(
              Terms(
                NumberFactor(
                 10
                ) [NumberFactor]
                MyNoTermList(
                ) [MyNoTermList]
              ) [Terms]
              MyNoExprList(
              ) [MyNoExprList]
            ) [NoMinusExpr]
          ) [StatementReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      NoRights(
      ) [NoRights]
      NoMethodTypeNameVoid(
       main
      ) [NoMethodTypeNameVoid]
      NoFormParam(
      ) [NoFormParam]
      MyDeclListVar(
        MyDeclListVar(
          MyDeclListVar(
            MyNoDeclListVar(
            ) [MyNoDeclListVar]
            VarDecl(
              NoRights(
              ) [NoRights]
              VarDeclType(
                Type(
                 char
                ) [Type]
              ) [VarDeclType]
              VarDeclElemNoBraces(
               c
              ) [VarDeclElemNoBraces]
              MyNoVarDeclList(
              ) [MyNoVarDeclList]
            ) [VarDecl]
          ) [MyDeclListVar]
          VarDecl(
            NoRights(
            ) [NoRights]
            VarDeclType(
              Type(
               bool
              ) [Type]
            ) [VarDeclType]
            VarDeclElemNoBraces(
             b
            ) [VarDeclElemNoBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [MyDeclListVar]
        VarDecl(
          NoRights(
          ) [NoRights]
          VarDeclType(
            Type(
             int
            ) [Type]
          ) [VarDeclType]
          VarDeclElemNoBraces(
           x
          ) [VarDeclElemNoBraces]
          MyNoVarDeclList(
          ) [MyNoVarDeclList]
        ) [VarDecl]
      ) [MyDeclListVar]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              StatementDesStat(
                DesignatorStatementAssign(
                  DesAssStmtm(
                    Design(
                      DesignatorIdent(
                       arr
                      ) [DesignatorIdent]
                      MyNoDesignatorElemList(
                      ) [MyNoDesignatorElemList]
                    ) [Design]
                    DesAssStmtCombOper(
                      Assign(
                      ) [Assign]
                    ) [DesAssStmtCombOper]
                    DesListEnd(
                      NoMinusExpr(
                        Terms(
                          NewFactor(
                            Type(
                             int
                            ) [Type]
                            NoMinusExpr(
                              Terms(
                                NumberFactor(
                                 10
                                ) [NumberFactor]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyNoExprList(
                              ) [MyNoExprList]
                            ) [NoMinusExpr]
                          ) [NewFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [DesListEnd]
                  ) [DesAssStmtm]
                ) [DesignatorStatementAssign]
              ) [StatementDesStat]
            ) [Statements]
            StatementFor(
              MyDesignatorForBegin(
                DesignatorStatementAssign(
                  DesAssStmtm(
                    Design(
                      DesignatorIdent(
                       x
                      ) [DesignatorIdent]
                      MyNoDesignatorElemList(
                      ) [MyNoDesignatorElemList]
                    ) [Design]
                    DesAssStmtCombOper(
                      Assign(
                      ) [Assign]
                    ) [DesAssStmtCombOper]
                    DesListEnd(
                      NoMinusExpr(
                        Terms(
                          NumberFactor(
                           0
                          ) [NumberFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [DesListEnd]
                  ) [DesAssStmtm]
                ) [DesignatorStatementAssign]
              ) [MyDesignatorForBegin]
              MyConditionFor(
                Condition(
                  CondTerms(
                    CondFactRelop(
                      NoMinusExpr(
                        Terms(
                          Var(
                            Design(
                              DesignatorIdent(
                               x
                              ) [DesignatorIdent]
                              MyNoDesignatorElemList(
                              ) [MyNoDesignatorElemList]
                            ) [Design]
                          ) [Var]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                      Smaller(
                      ) [Smaller]
                      NoMinusExpr(
                        Terms(
                          NumberFactor(
                           10
                          ) [NumberFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [CondFactRelop]
                    MyNoCondTermList(
                    ) [MyNoCondTermList]
                  ) [CondTerms]
                  MyNoConditionList(
                  ) [MyNoConditionList]
                ) [Condition]
              ) [MyConditionFor]
              MyDesignatorStatementFor(
                DesignatorStatementINC(
                  Design(
                    DesignatorIdent(
                     x
                    ) [DesignatorIdent]
                    MyNoDesignatorElemList(
                    ) [MyNoDesignatorElemList]
                  ) [Design]
                ) [DesignatorStatementINC]
              ) [MyDesignatorStatementFor]
              ForBody(
                StatementSTMT(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    StatementDesStat(
                      DesignatorStatementAssign(
                        DesAssStmtm(
                          Design(
                            DesignatorIdent(
                             arr
                            ) [DesignatorIdent]
                            MyDesignatorElemList(
                              ArrayElem(
                                NoMinusExpr(
                                  Terms(
                                    Var(
                                      Design(
                                        DesignatorIdent(
                                         x
                                        ) [DesignatorIdent]
                                        MyNoDesignatorElemList(
                                        ) [MyNoDesignatorElemList]
                                      ) [Design]
                                    ) [Var]
                                    MyNoTermList(
                                    ) [MyNoTermList]
                                  ) [Terms]
                                  MyNoExprList(
                                  ) [MyNoExprList]
                                ) [NoMinusExpr]
                              ) [ArrayElem]
                              MyNoDesignatorElemList(
                              ) [MyNoDesignatorElemList]
                            ) [MyDesignatorElemList]
                          ) [Design]
                          DesAssStmtCombOper(
                            Assign(
                            ) [Assign]
                          ) [DesAssStmtCombOper]
                          DesListEnd(
                            NoMinusExpr(
                              Terms(
                                Var(
                                  Design(
                                    DesignatorIdent(
                                     x
                                    ) [DesignatorIdent]
                                    MyNoDesignatorElemList(
                                    ) [MyNoDesignatorElemList]
                                  ) [Design]
                                ) [Var]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyExprList(
                                ExprListElems(
                                  ListAdd(
                                    Plus(
                                    ) [Plus]
                                  ) [ListAdd]
                                  Terms(
                                    NumberFactor(
                                     1
                                    ) [NumberFactor]
                                    MyNoTermList(
                                    ) [MyNoTermList]
                                  ) [Terms]
                                ) [ExprListElems]
                                MyNoExprList(
                                ) [MyNoExprList]
                              ) [MyExprList]
                            ) [NoMinusExpr]
                          ) [DesListEnd]
                        ) [DesAssStmtm]
                      ) [DesignatorStatementAssign]
                    ) [StatementDesStat]
                  ) [Statements]
                ) [StatementSTMT]
              ) [ForBody]
            ) [StatementFor]
          ) [Statements]
          StatementDesStat(
            DesignatorStatementAssign(
              DesAssStmtm(
                Design(
                  DesignatorIdent(
                   x
                  ) [DesignatorIdent]
                  MyNoDesignatorElemList(
                  ) [MyNoDesignatorElemList]
                ) [Design]
                DesAssStmtCombOper(
                  Assign(
                  ) [Assign]
                ) [DesAssStmtCombOper]
                DesOperJun(
                  Design(
                    DesignatorIdent(
                     arr
                    ) [DesignatorIdent]
                    MyNoDesignatorElemList(
                    ) [MyNoDesignatorElemList]
                  ) [Design]
                 5
                ) [DesOperJun]
              ) [DesAssStmtm]
            ) [DesignatorStatementAssign]
          ) [StatementDesStat]
        ) [Statements]
        StatementPrint(
          NoMinusExpr(
            Terms(
              Var(
                Design(
                  DesignatorIdent(
                   x
                  ) [DesignatorIdent]
                  MyNoDesignatorElemList(
                  ) [MyNoDesignatorElemList]
                ) [Design]
              ) [Var]
              MyNoTermList(
              ) [MyNoTermList]
            ) [Terms]
            MyNoExprList(
            ) [MyNoExprList]
          ) [NoMinusExpr]
        ) [StatementPrint]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:19:09,909 - ===================================
INFO  03:19:09,914 - Deklarisana promenljiva x na liniji 2
INFO  03:19:09,914 - Deklarisana promenljiva y na liniji 2
INFO  03:19:09,914 - Deklarisana promenljiva arr na liniji 3
INFO  03:19:09,914 - Obradjuje se funkcija bez return iskaza k na liniji 14
INFO  03:19:09,914 - Detektovan pristup globalnoj promenljivoj:   x na liniji 15 na liniji 15
INFO  03:19:09,914 - Obradjuje se funkcija sa return iskazom f1 na liniji 18
INFO  03:19:09,914 - Obradjuje se funkcija bez return iskaza main na liniji 22
INFO  03:19:09,915 - Deklarisana promenljiva c na liniji 22
INFO  03:19:09,915 - Deklarisana promenljiva b na liniji 22
INFO  03:19:09,915 - Deklarisana promenljiva x na liniji 22
INFO  03:19:09,915 - Detektovan pristup globalnoj promenljivoj:   arr na liniji 24 na liniji 24
INFO  03:19:09,915 - Detektovan pristup elementu niza:   arr na liniji 27 na liniji 27
INFO  03:19:09,916 - Detektovan pristup globalnoj promenljivoj:   arr na liniji 31 na liniji 31
INFO  03:19:09,916 -  Print count calls = 1
INFO  03:19:09,916 -  Deklarisanih promenljivih ima = 6
INFO  03:19:09,916 - ===================================
INFO  03:19:09,925 - Parsiranje uspesno zavrseno!
