INFO  01:17:10,507 - Compiling source file: D:\faks\zorana\4.Godina-1.Semestar\pp1\projekat\MJCompiler_jz160143\workspace\MJCompiler\test\parserProgramArray.mj
INFO  01:17:10,569 - #2 program
INFO  01:17:10,570 - #15 ParserTestArrays
INFO  01:17:10,570 - #15 int
INFO  01:17:10,572 - #15 numbers
INFO  01:17:10,573 - #44 [
INFO  01:17:10,573 - #45 ]
INFO  01:17:10,573 - #5 ;
INFO  01:17:10,574 - #15 char
INFO  01:17:10,575 - #15 characters
INFO  01:17:10,575 - #44 [
INFO  01:17:10,575 - #45 ]
INFO  01:17:10,575 - #5 ;
INFO  01:17:10,575 - #15 bool
INFO  01:17:10,576 - #15 bools
INFO  01:17:10,576 - #44 [
INFO  01:17:10,576 - #45 ]
INFO  01:17:10,576 - #5 ;
INFO  01:17:10,576 - #15 int
INFO  01:17:10,576 - #15 x
INFO  01:17:10,578 - #5 ;
INFO  01:17:10,578 - #3 {
INFO  01:17:10,579 - #15 int
INFO  01:17:10,580 - #15 k
INFO  01:17:10,580 - #6 (
INFO  01:17:10,580 - #7 )
INFO  01:17:10,581 - #15 int
INFO  01:17:10,581 - #15 y
INFO  01:17:10,581 - #44 [
INFO  01:17:10,582 - #45 ]
INFO  01:17:10,582 - #5 ;
INFO  01:17:10,582 - #3 {
INFO  01:17:10,582 - #15 y
INFO  01:17:10,583 - #8 =
INFO  01:17:10,584 - #24 new
INFO  01:17:10,585 - #15 int
INFO  01:17:10,585 - #44 [
INFO  01:17:10,585 - #14 10
INFO  01:17:10,585 - #45 ]
INFO  01:17:10,587 - #5 ;
INFO  01:17:10,587 - #15 y
INFO  01:17:10,588 - #44 [
INFO  01:17:10,588 - #14 1
INFO  01:17:10,588 - #45 ]
INFO  01:17:10,588 - #8 =
INFO  01:17:10,588 - #14 6
INFO  01:17:10,588 - #5 ;
INFO  01:17:10,588 - #15 y
INFO  01:17:10,589 - #44 [
INFO  01:17:10,589 - #14 2
INFO  01:17:10,589 - #45 ]
INFO  01:17:10,589 - #41 ++
INFO  01:17:10,589 - #5 ;
INFO  01:17:10,589 - #15 numbers
INFO  01:17:10,589 - #44 [
INFO  01:17:10,589 - #14 6
INFO  01:17:10,589 - #45 ]
INFO  01:17:10,589 - #42 --
INFO  01:17:10,590 - #5 ;
INFO  01:17:10,594 - #25 read
INFO  01:17:10,594 - #6 (
INFO  01:17:10,594 - #15 bools
INFO  01:17:10,594 - #44 [
INFO  01:17:10,594 - #14 1
INFO  01:17:10,594 - #45 ]
INFO  01:17:10,594 - #7 )
INFO  01:17:10,595 - #5 ;
INFO  01:17:10,595 - #11 print
INFO  01:17:10,595 - #6 (
INFO  01:17:10,595 - #15 bools
INFO  01:17:10,595 - #44 [
INFO  01:17:10,595 - #14 3
INFO  01:17:10,596 - #45 ]
INFO  01:17:10,596 - #7 )
INFO  01:17:10,596 - #5 ;
INFO  01:17:10,596 - #11 print
INFO  01:17:10,596 - #6 (
INFO  01:17:10,596 - #15 numbers
INFO  01:17:10,596 - #44 [
INFO  01:17:10,597 - #14 2
INFO  01:17:10,597 - #45 ]
INFO  01:17:10,597 - #12 ,
INFO  01:17:10,597 - #14 3
INFO  01:17:10,597 - #7 )
INFO  01:17:10,597 - #5 ;
INFO  01:17:10,597 - #9 return
INFO  01:17:10,597 - #14 1
INFO  01:17:10,598 - #5 ;
INFO  01:17:10,598 - #4 }
INFO  01:17:10,598 - #13 void
INFO  01:17:10,599 - #15 main
INFO  01:17:10,599 - #6 (
INFO  01:17:10,599 - #7 )
INFO  01:17:10,599 - #3 {
INFO  01:17:10,599 - #15 k
INFO  01:17:10,600 - #6 (
INFO  01:17:10,600 - #7 )
INFO  01:17:10,600 - #5 ;
INFO  01:17:10,601 - #9 return
INFO  01:17:10,601 - #5 ;
INFO  01:17:10,601 - #4 }
INFO  01:17:10,602 - #4 }
INFO  01:17:10,620 - Program(
  ProgName(
   ParserTestArrays
  ) [ProgName]
  MyDeclList(
    MyDeclList(
      MyDeclList(
        MyDeclList(
          MyNoDeclList(
          ) [MyNoDeclList]
          VarDeclListElem(
            VarDecl(
              VarDeclType(
                Type(
                 int
                ) [Type]
              ) [VarDeclType]
              VarDeclElemBraces(
               numbers
              ) [VarDeclElemBraces]
              MyNoVarDeclList(
              ) [MyNoVarDeclList]
            ) [VarDecl]
          ) [VarDeclListElem]
        ) [MyDeclList]
        VarDeclListElem(
          VarDecl(
            VarDeclType(
              Type(
               char
              ) [Type]
            ) [VarDeclType]
            VarDeclElemBraces(
             characters
            ) [VarDeclElemBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [VarDeclListElem]
      ) [MyDeclList]
      VarDeclListElem(
        VarDecl(
          VarDeclType(
            Type(
             bool
            ) [Type]
          ) [VarDeclType]
          VarDeclElemBraces(
           bools
          ) [VarDeclElemBraces]
          MyNoVarDeclList(
          ) [MyNoVarDeclList]
        ) [VarDecl]
      ) [VarDeclListElem]
    ) [MyDeclList]
    VarDeclListElem(
      VarDecl(
        VarDeclType(
          Type(
           int
          ) [Type]
        ) [VarDeclType]
        VarDeclElemNoBraces(
         x
        ) [VarDeclElemNoBraces]
        MyNoVarDeclList(
        ) [MyNoVarDeclList]
      ) [VarDecl]
    ) [VarDeclListElem]
  ) [MyDeclList]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeNameRet(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeNameRet]
        NoFormParam(
        ) [NoFormParam]
        MyDeclListVar(
          MyNoDeclListVar(
          ) [MyNoDeclListVar]
          VarDecl(
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            VarDeclElemBraces(
             y
            ) [VarDeclElemBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [MyDeclListVar]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStmt(
                        ) [NoStmt]
                        StatementDesStat(
                          DesignatorStatementAssign(
                            DesAssStmtm(
                              Design(
                               y
                                Variable(
                                ) [Variable]
                              ) [Design]
                              Assign(
                              ) [Assign]
                              NoMinusExpr(
                                Terms(
                                  NewFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    NoMinusExpr(
                                      Terms(
                                        NumberFactor(
                                         10
                                        ) [NumberFactor]
                                        MyNoTermList(
                                        ) [MyNoTermList]
                                      ) [Terms]
                                      MyNoExprList(
                                      ) [MyNoExprList]
                                    ) [NoMinusExpr]
                                  ) [NewFactor]
                                  MyNoTermList(
                                  ) [MyNoTermList]
                                ) [Terms]
                                MyNoExprList(
                                ) [MyNoExprList]
                              ) [NoMinusExpr]
                            ) [DesAssStmtm]
                          ) [DesignatorStatementAssign]
                        ) [StatementDesStat]
                      ) [Statements]
                      StatementDesStat(
                        DesignatorStatementAssign(
                          DesAssStmtm(
                            Design(
                             y
                              ArrayElem(
                                NoMinusExpr(
                                  Terms(
                                    NumberFactor(
                                     1
                                    ) [NumberFactor]
                                    MyNoTermList(
                                    ) [MyNoTermList]
                                  ) [Terms]
                                  MyNoExprList(
                                  ) [MyNoExprList]
                                ) [NoMinusExpr]
                              ) [ArrayElem]
                            ) [Design]
                            Assign(
                            ) [Assign]
                            NoMinusExpr(
                              Terms(
                                NumberFactor(
                                 6
                                ) [NumberFactor]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyNoExprList(
                              ) [MyNoExprList]
                            ) [NoMinusExpr]
                          ) [DesAssStmtm]
                        ) [DesignatorStatementAssign]
                      ) [StatementDesStat]
                    ) [Statements]
                    StatementDesStat(
                      DesignatorStatementINC(
                        Design(
                         y
                          ArrayElem(
                            NoMinusExpr(
                              Terms(
                                NumberFactor(
                                 2
                                ) [NumberFactor]
                                MyNoTermList(
                                ) [MyNoTermList]
                              ) [Terms]
                              MyNoExprList(
                              ) [MyNoExprList]
                            ) [NoMinusExpr]
                          ) [ArrayElem]
                        ) [Design]
                      ) [DesignatorStatementINC]
                    ) [StatementDesStat]
                  ) [Statements]
                  StatementDesStat(
                    DesignatorStatementDEC(
                      Design(
                       numbers
                        ArrayElem(
                          NoMinusExpr(
                            Terms(
                              NumberFactor(
                               6
                              ) [NumberFactor]
                              MyNoTermList(
                              ) [MyNoTermList]
                            ) [Terms]
                            MyNoExprList(
                            ) [MyNoExprList]
                          ) [NoMinusExpr]
                        ) [ArrayElem]
                      ) [Design]
                    ) [DesignatorStatementDEC]
                  ) [StatementDesStat]
                ) [Statements]
                StatementRead(
                  Design(
                   bools
                    ArrayElem(
                      NoMinusExpr(
                        Terms(
                          NumberFactor(
                           1
                          ) [NumberFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [ArrayElem]
                  ) [Design]
                ) [StatementRead]
              ) [Statements]
              StatementPrint(
                NoMinusExpr(
                  Terms(
                    Var(
                      Design(
                       bools
                        ArrayElem(
                          NoMinusExpr(
                            Terms(
                              NumberFactor(
                               3
                              ) [NumberFactor]
                              MyNoTermList(
                              ) [MyNoTermList]
                            ) [Terms]
                            MyNoExprList(
                            ) [MyNoExprList]
                          ) [NoMinusExpr]
                        ) [ArrayElem]
                      ) [Design]
                    ) [Var]
                    MyNoTermList(
                    ) [MyNoTermList]
                  ) [Terms]
                  MyNoExprList(
                  ) [MyNoExprList]
                ) [NoMinusExpr]
              ) [StatementPrint]
            ) [Statements]
            StatementPrintNumber(
              NoMinusExpr(
                Terms(
                  Var(
                    Design(
                     numbers
                      ArrayElem(
                        NoMinusExpr(
                          Terms(
                            NumberFactor(
                             2
                            ) [NumberFactor]
                            MyNoTermList(
                            ) [MyNoTermList]
                          ) [Terms]
                          MyNoExprList(
                          ) [MyNoExprList]
                        ) [NoMinusExpr]
                      ) [ArrayElem]
                    ) [Design]
                  ) [Var]
                  MyNoTermList(
                  ) [MyNoTermList]
                ) [Terms]
                MyNoExprList(
                ) [MyNoExprList]
              ) [NoMinusExpr]
             3
            ) [StatementPrintNumber]
          ) [Statements]
          StatementReturnExpr(
            NoMinusExpr(
              Terms(
                NumberFactor(
                 1
                ) [NumberFactor]
                MyNoTermList(
                ) [MyNoTermList]
              ) [Terms]
              MyNoExprList(
              ) [MyNoExprList]
            ) [NoMinusExpr]
          ) [StatementReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      NoMethodTypeNameVoid(
       main
      ) [NoMethodTypeNameVoid]
      NoFormParam(
      ) [NoFormParam]
      MyNoDeclListVar(
      ) [MyNoDeclListVar]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          StatementDesStat(
            DesignatorStatementFuncCall(
              Design(
               k
                Variable(
                ) [Variable]
              ) [Design]
              NoActuals(
              ) [NoActuals]
            ) [DesignatorStatementFuncCall]
          ) [StatementDesStat]
        ) [Statements]
        StatementNoReturnExpr(
        ) [StatementNoReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:17:10,621 - ===================================
INFO  01:17:10,626 - Deklarisana promenljiva numbers na liniji 2
INFO  01:17:10,626 - Deklarisana promenljiva characters na liniji 3
INFO  01:17:10,626 - Deklarisana promenljiva bools na liniji 4
INFO  01:17:10,626 - Deklarisana promenljiva x na liniji 5
INFO  01:17:10,627 - Obradjuje se funkcija sa return iskazom k na liniji 9
INFO  01:17:10,627 - Deklarisana promenljiva y na liniji 9
INFO  01:17:10,627 - Obradjuje se funkcija bez return iskaza main na liniji 23
INFO  01:17:10,627 -  Print count calls = 2
INFO  01:17:10,628 -  Deklarisanih promenljivih ima = 5
INFO  01:17:10,628 - ===================================
INFO  01:17:10,630 - Parsiranje uspesno zavrseno!
