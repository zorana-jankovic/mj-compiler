INFO  22:50:02,277 - Compiling source file: D:\faks\zorana\4.Godina-1.Semestar\pp1\projekat\MJCompiler_jz160143\workspace\MJCompiler\test\testGreske.mj
INFO  22:50:02,351 - #2 program
INFO  22:50:02,352 - #15 test301
INFO  22:50:02,352 - #15 char
INFO  22:50:02,353 - #15 niz
INFO  22:50:02,354 - #44 [
INFO  22:50:02,354 - #45 ]
INFO  22:50:02,354 - #5 ;
INFO  22:50:02,355 - #23 const
INFO  22:50:02,356 - #15 int
INFO  22:50:02,356 - #15 size
INFO  22:50:02,356 - #8 =
INFO  22:50:02,356 - #14 26
INFO  22:50:02,357 - #5 ;
INFO  22:50:02,358 - #15 int
INFO  22:50:02,359 - #15 i
INFO  22:50:02,359 - #12 ,
INFO  22:50:02,359 - #15 j
INFO  22:50:02,359 - #5 ;
INFO  22:50:02,360 - #15 int
INFO  22:50:02,360 - #15 b
INFO  22:50:02,361 - #5 ;
INFO  22:50:02,361 - #15 int
INFO  22:50:02,361 - #15 a
INFO  22:50:02,361 - #44 [
INFO  22:50:02,361 - #45 ]
INFO  22:50:02,361 - #5 ;
INFO  22:50:02,361 - #22 abstract
INFO  22:50:02,362 - #21 class
INFO  22:50:02,362 - #15 Postavljac
INFO  22:50:02,362 - #3 {
INFO  22:50:02,363 - #3 {
INFO  22:50:02,363 - #55 public
INFO  22:50:02,364 - #22 abstract
INFO  22:50:02,364 - #15 int
INFO  22:50:02,365 - #15 postavi
INFO  22:50:02,365 - #6 (
INFO  22:50:02,365 - #7 )
INFO  22:50:02,366 - #5 ;
INFO  22:50:02,366 - #55 public
INFO  22:50:02,366 - #22 abstract
INFO  22:50:02,366 - #15 int
INFO  22:50:02,366 - #15 eee
INFO  22:50:02,366 - #15 se
ERROR 22:50:02,367 - 
Sintaksna greska na liniji 16
INFO  22:50:02,367 - #6 (
INFO  22:50:02,367 - #7 )
INFO  22:50:02,367 - #5 ;
INFO  22:50:02,368 - #4 }
INFO  22:50:02,368 - #4 }
INFO  22:50:02,368 - #21 class
ERROR 22:50:02,368 - Izvrsen oporavak do ;  u liniji 2
INFO  22:50:02,369 - #15 Klasa
INFO  22:50:02,369 - #27 extends
INFO  22:50:02,370 - #15 Postavljac
INFO  22:50:02,370 - #3 {
INFO  22:50:02,370 - #55 public
INFO  22:50:02,370 - #15 int
INFO  22:50:02,371 - #15 k
INFO  22:50:02,375 - #5 ;
INFO  22:50:02,375 - #55 public
INFO  22:50:02,375 - #15 int
INFO  22:50:02,375 - #15 i
INFO  22:50:02,375 - #5 ;
INFO  22:50:02,375 - #55 public
INFO  22:50:02,376 - #15 int
INFO  22:50:02,376 - #15 niz
INFO  22:50:02,376 - #44 [
INFO  22:50:02,376 - #45 ]
INFO  22:50:02,376 - #5 ;
INFO  22:50:02,376 - #3 {
INFO  22:50:02,376 - #55 public
INFO  22:50:02,377 - #13 void
INFO  22:50:02,377 - #15 postavix
INFO  22:50:02,377 - #6 (
INFO  22:50:02,377 - #15 int
INFO  22:50:02,377 - #15 x
INFO  22:50:02,377 - #7 )
INFO  22:50:02,377 - #3 {
INFO  22:50:02,377 - #15 i
INFO  22:50:02,378 - #8 =
INFO  22:50:02,380 - #15 x
INFO  22:50:02,380 - #5 ;
INFO  22:50:02,382 - #4 }
INFO  22:50:02,383 - #4 }
INFO  22:50:02,384 - #4 }
INFO  22:50:02,384 - #21 class
INFO  22:50:02,385 - #15 Klasa1
INFO  22:50:02,385 - #27 extends
INFO  22:50:02,385 - #15 e
INFO  22:50:02,385 - #15 Klasa
ERROR 22:50:02,385 - 
Sintaksna greska na liniji 31
INFO  22:50:02,385 - #3 {
INFO  22:50:02,385 - #55 public
INFO  22:50:02,385 - #15 char
INFO  22:50:02,385 - #15 k
ERROR 22:50:02,386 - Izvrsen oporavak do { u liniji 31
INFO  22:50:02,387 - #5 ;
INFO  22:50:02,387 - #3 {
INFO  22:50:02,387 - #55 public
INFO  22:50:02,387 - #15 int
INFO  22:50:02,387 - #15 postavi
INFO  22:50:02,387 - #6 (
INFO  22:50:02,387 - #7 )
INFO  22:50:02,387 - #3 {
INFO  22:50:02,387 - #15 this
INFO  22:50:02,387 - #43 .
INFO  22:50:02,387 - #15 k
INFO  22:50:02,387 - #8 =
INFO  22:50:02,388 - #19 a
INFO  22:50:02,388 - #5 ;
INFO  22:50:02,388 - #9 return
INFO  22:50:02,388 - #14 10
INFO  22:50:02,388 - #5 ;
INFO  22:50:02,388 - #4 }
INFO  22:50:02,389 - #55 public
INFO  22:50:02,389 - #13 void
INFO  22:50:02,389 - #15 pisi
INFO  22:50:02,390 - #6 (
INFO  22:50:02,390 - #7 )
INFO  22:50:02,390 - #3 {
INFO  22:50:02,390 - #11 print
INFO  22:50:02,390 - #6 (
INFO  22:50:02,390 - #15 k
INFO  22:50:02,390 - #7 )
INFO  22:50:02,390 - #5 ;
INFO  22:50:02,390 - #11 print
INFO  22:50:02,390 - #6 (
INFO  22:50:02,390 - #19 X
INFO  22:50:02,390 - #7 )
INFO  22:50:02,390 - #5 ;
INFO  22:50:02,390 - #4 }
INFO  22:50:02,390 - #4 }
INFO  22:50:02,391 - #4 }
INFO  22:50:02,391 - #3 {
INFO  22:50:02,391 - #13 void
INFO  22:50:02,391 - #15 uradi
INFO  22:50:02,391 - #6 (
INFO  22:50:02,391 - #15 Postavljac
INFO  22:50:02,391 - #15 k1
INFO  22:50:02,391 - #12 ,
INFO  22:50:02,391 - #12 ,
ERROR 22:50:02,391 - 
Sintaksna greska na liniji 48
INFO  22:50:02,391 - #15 Postavljac
INFO  22:50:02,391 - #15 k2
INFO  22:50:02,391 - #7 )
ERROR 22:50:02,391 - Izvrsen oporavak do , ili ) u liniji 48
INFO  22:50:02,392 - #3 {
INFO  22:50:02,392 - #17 if
INFO  22:50:02,392 - #6 (
INFO  22:50:02,393 - #15 k2
INFO  22:50:02,393 - #34 !=
INFO  22:50:02,393 - #15 null
INFO  22:50:02,394 - #39 &&
INFO  22:50:02,395 - #15 k1
INFO  22:50:02,395 - #34 !=
INFO  22:50:02,395 - #15 null
INFO  22:50:02,395 - #7 )
INFO  22:50:02,396 - #3 {
INFO  22:50:02,396 - #11 print
INFO  22:50:02,397 - #6 (
INFO  22:50:02,397 - #15 k1
INFO  22:50:02,397 - #43 .
INFO  22:50:02,397 - #15 postavi
INFO  22:50:02,397 - #6 (
INFO  22:50:02,397 - #7 )
INFO  22:50:02,398 - #7 )
INFO  22:50:02,398 - #5 ;
INFO  22:50:02,398 - #11 print
INFO  22:50:02,398 - #6 (
INFO  22:50:02,398 - #15 k2
INFO  22:50:02,398 - #43 .
INFO  22:50:02,398 - #15 postavi
INFO  22:50:02,398 - #6 (
INFO  22:50:02,398 - #7 )
INFO  22:50:02,398 - #7 )
INFO  22:50:02,398 - #5 ;
INFO  22:50:02,398 - #4 }
INFO  22:50:02,398 - #4 }
INFO  22:50:02,399 - #13 void
INFO  22:50:02,399 - #15 main
INFO  22:50:02,399 - #6 (
INFO  22:50:02,399 - #7 )
INFO  22:50:02,399 - #15 int
INFO  22:50:02,399 - #15 niz
INFO  22:50:02,399 - #44 [
INFO  22:50:02,399 - #45 ]
INFO  22:50:02,399 - #5 ;
INFO  22:50:02,399 - #15 int
INFO  22:50:02,399 - #15 e
INFO  22:50:02,399 - #5 ;
INFO  22:50:02,399 - #15 int
INFO  22:50:02,400 - #15 d
INFO  22:50:02,400 - #12 ,
INFO  22:50:02,400 - #5 ;
ERROR 22:50:02,400 - 
Sintaksna greska na liniji 58
INFO  22:50:02,400 - #3 {
INFO  22:50:02,400 - #15 e
INFO  22:50:02,400 - #8 =
ERROR 22:50:02,400 - Izvrsen oporavak do ; ili , u liniji 58
INFO  22:50:02,400 - #14 3
INFO  22:50:02,400 - #10 +
INFO  22:50:02,400 - #5 ;
ERROR 22:50:02,400 - 
Sintaksna greska na liniji 60
INFO  22:50:02,400 - #11 print
INFO  22:50:02,400 - #6 (
INFO  22:50:02,401 - #15 eol
ERROR 22:50:02,401 - Izvrsen oporavak do ; u liniji 1
INFO  22:50:02,401 - #7 )
INFO  22:50:02,401 - #5 ;
INFO  22:50:02,401 - #26 for
INFO  22:50:02,401 - #6 (
INFO  22:50:02,401 - #15 e
INFO  22:50:02,401 - #8 =
INFO  22:50:02,401 - #14 10
INFO  22:50:02,401 - #5 ;
INFO  22:50:02,401 - #15 e
INFO  22:50:02,401 - #35 >
INFO  22:50:02,401 - #5 ;
ERROR 22:50:02,401 - 
Sintaksna greska na liniji 64
INFO  22:50:02,402 - #15 e
INFO  22:50:02,402 - #42 --
INFO  22:50:02,402 - #7 )
ERROR 22:50:02,402 - Izvrsen oporavak do ;  u liniji 64
INFO  22:50:02,402 - #3 {
INFO  22:50:02,402 - #15 e
INFO  22:50:02,402 - #8 =
INFO  22:50:02,402 - #14 7
INFO  22:50:02,402 - #5 ;
INFO  22:50:02,403 - #4 }
INFO  22:50:02,403 - #4 }
INFO  22:50:02,403 - #4 }
INFO  22:50:02,421 - Program(
  ProgName(
   test301
  ) [ProgName]
  MyDeclList(
    MyDeclList(
      MyDeclList(
        MyDeclList(
          MyDeclList(
            MyDeclList(
              MyDeclList(
                MyDeclList(
                  MyNoDeclList(
                  ) [MyNoDeclList]
                  VarDeclListElem(
                    VarDecl(
                      NoRights(
                      ) [NoRights]
                      VarDeclType(
                        Type(
                         char
                        ) [Type]
                      ) [VarDeclType]
                      VarDeclElemBraces(
                       niz
                      ) [VarDeclElemBraces]
                      MyNoVarDeclList(
                      ) [MyNoVarDeclList]
                    ) [VarDecl]
                  ) [VarDeclListElem]
                ) [MyDeclList]
                ConstDeclListElem(
                  ConstDecl(
                    ConstDeclType(
                      Type(
                       int
                      ) [Type]
                    ) [ConstDeclType]
                    ConstDeclElem(
                     size
                      NumConst(
                       26
                      ) [NumConst]
                    ) [ConstDeclElem]
                    MyNoConstDeclList(
                    ) [MyNoConstDeclList]
                  ) [ConstDecl]
                ) [ConstDeclListElem]
              ) [MyDeclList]
              VarDeclListElem(
                VarDecl(
                  NoRights(
                  ) [NoRights]
                  VarDeclType(
                    Type(
                     int
                    ) [Type]
                  ) [VarDeclType]
                  VarDeclElemNoBraces(
                   i
                  ) [VarDeclElemNoBraces]
                  MyVarDeclList(
                    MyNoVarDeclList(
                    ) [MyNoVarDeclList]
                    VarDeclElemNoBraces(
                     j
                    ) [VarDeclElemNoBraces]
                  ) [MyVarDeclList]
                ) [VarDecl]
              ) [VarDeclListElem]
            ) [MyDeclList]
            VarDeclListElem(
              VarDecl(
                NoRights(
                ) [NoRights]
                VarDeclType(
                  Type(
                   int
                  ) [Type]
                ) [VarDeclType]
                VarDeclElemNoBraces(
                 b
                ) [VarDeclElemNoBraces]
                MyNoVarDeclList(
                ) [MyNoVarDeclList]
              ) [VarDecl]
            ) [VarDeclListElem]
          ) [MyDeclList]
          VarDeclListElem(
            VarDecl(
              NoRights(
              ) [NoRights]
              VarDeclType(
                Type(
                 int
                ) [Type]
              ) [VarDeclType]
              VarDeclElemBraces(
               a
              ) [VarDeclElemBraces]
              MyNoVarDeclList(
              ) [MyNoVarDeclList]
            ) [VarDecl]
          ) [VarDeclListElem]
        ) [MyDeclList]
        AbstractClassDeclElem(
          MyAbstractClassDecl(
            AbsClassType(
             Postavljac
            ) [AbsClassType]
            MyNoExtendsClass(
            ) [MyNoExtendsClass]
            MyNoDeclListVar(
            ) [MyNoDeclListVar]
            MyAbsMethDeclClass(
              MyAbsMethDeclClassList(
                MyAbsMethDeclClassList(
                  MyNoAbsMethDeclClassList(
                  ) [MyNoAbsMethDeclClassList]
                  AbsClassAbsMethDecl(
                    MyAbsMethodDecl(
                      PublicRight(
                      ) [PublicRight]
                      AbsMethodSignifications(
                      ) [AbsMethodSignifications]
                      MethodTypeNameRet(
                        Type(
                         int
                        ) [Type]
                       postavi
                      ) [MethodTypeNameRet]
                      NoFormParam(
                      ) [NoFormParam]
                    ) [MyAbsMethodDecl]
                  ) [AbsClassAbsMethDecl]
                ) [MyAbsMethDeclClassList]
                AbsClassAbsMethDecl(
                  ErrorStmtAbsMethodDecl(
                  ) [ErrorStmtAbsMethodDecl]
                ) [AbsClassAbsMethDecl]
              ) [MyAbsMethDeclClassList]
            ) [MyAbsMethDeclClass]
          ) [MyAbstractClassDecl]
        ) [AbstractClassDeclElem]
      ) [MyDeclList]
      ClassDeclElem(
        MyClassDecl(
          ClassType(
           Klasa
          ) [ClassType]
          MyExtendsClass(
            Type(
             Postavljac
            ) [Type]
          ) [MyExtendsClass]
          MyDeclListVar(
            MyDeclListVar(
              MyDeclListVar(
                MyNoDeclListVar(
                ) [MyNoDeclListVar]
                VarDecl(
                  PublicRight(
                  ) [PublicRight]
                  VarDeclType(
                    Type(
                     int
                    ) [Type]
                  ) [VarDeclType]
                  VarDeclElemNoBraces(
                   k
                  ) [VarDeclElemNoBraces]
                  MyNoVarDeclList(
                  ) [MyNoVarDeclList]
                ) [VarDecl]
              ) [MyDeclListVar]
              VarDecl(
                PublicRight(
                ) [PublicRight]
                VarDeclType(
                  Type(
                   int
                  ) [Type]
                ) [VarDeclType]
                VarDeclElemNoBraces(
                 i
                ) [VarDeclElemNoBraces]
                MyNoVarDeclList(
                ) [MyNoVarDeclList]
              ) [VarDecl]
            ) [MyDeclListVar]
            VarDecl(
              PublicRight(
              ) [PublicRight]
              VarDeclType(
                Type(
                 int
                ) [Type]
              ) [VarDeclType]
              VarDeclElemBraces(
               niz
              ) [VarDeclElemBraces]
              MyNoVarDeclList(
              ) [MyNoVarDeclList]
            ) [VarDecl]
          ) [MyDeclListVar]
          MyMethodDeclClass(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethodDecl(
                PublicRight(
                ) [PublicRight]
                NoMethodTypeNameVoid(
                 postavix
                ) [NoMethodTypeNameVoid]
                FormParams(
                  SingleFormalParamDecl(
                    FormalParamDeclNoBraces(
                      Type(
                       int
                      ) [Type]
                     x
                    ) [FormalParamDeclNoBraces]
                  ) [SingleFormalParamDecl]
                ) [FormParams]
                MyNoDeclListVar(
                ) [MyNoDeclListVar]
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  StatementDesStat(
                    DesignatorStatementAssign(
                      DesAssStmtm(
                        Design(
                          DesignatorIdent(
                           i
                          ) [DesignatorIdent]
                          MyNoDesignatorElemList(
                          ) [MyNoDesignatorElemList]
                        ) [Design]
                        DesAssStmtCombOper(
                          Assign(
                          ) [Assign]
                        ) [DesAssStmtCombOper]
                        NoMinusExpr(
                          Terms(
                            Var(
                              Design(
                                DesignatorIdent(
                                 x
                                ) [DesignatorIdent]
                                MyNoDesignatorElemList(
                                ) [MyNoDesignatorElemList]
                              ) [Design]
                            ) [Var]
                            MyNoTermList(
                            ) [MyNoTermList]
                          ) [Terms]
                          MyNoExprList(
                          ) [MyNoExprList]
                        ) [NoMinusExpr]
                      ) [DesAssStmtm]
                    ) [DesignatorStatementAssign]
                  ) [StatementDesStat]
                ) [Statements]
              ) [MethodDecl]
            ) [MethodDeclarations]
          ) [MyMethodDeclClass]
        ) [MyClassDecl]
      ) [ClassDeclElem]
    ) [MyDeclList]
    ClassDeclElem(
      MyClassDecl(
        ClassType(
         Klasa1
        ) [ClassType]
        ErrorStmtExtendsClass(
        ) [ErrorStmtExtendsClass]
        MyDeclListVar(
          MyNoDeclListVar(
          ) [MyNoDeclListVar]
          VarDecl(
            PublicRight(
            ) [PublicRight]
            VarDeclType(
              Type(
               char
              ) [Type]
            ) [VarDeclType]
            VarDeclElemNoBraces(
             k
            ) [VarDeclElemNoBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [MyDeclListVar]
        MyMethodDeclClass(
          MethodDeclarations(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethodDecl(
                PublicRight(
                ) [PublicRight]
                MethodTypeNameRet(
                  Type(
                   int
                  ) [Type]
                 postavi
                ) [MethodTypeNameRet]
                NoFormParam(
                ) [NoFormParam]
                MyNoDeclListVar(
                ) [MyNoDeclListVar]
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    StatementDesStat(
                      DesignatorStatementAssign(
                        DesAssStmtm(
                          Design(
                            DesignatorIdent(
                             this
                            ) [DesignatorIdent]
                            MyDesignatorElemList(
                              ClassField(
                               k
                              ) [ClassField]
                              MyNoDesignatorElemList(
                              ) [MyNoDesignatorElemList]
                            ) [MyDesignatorElemList]
                          ) [Design]
                          DesAssStmtCombOper(
                            Assign(
                            ) [Assign]
                          ) [DesAssStmtCombOper]
                          NoMinusExpr(
                            Terms(
                              CharFactor(
                               a
                              ) [CharFactor]
                              MyNoTermList(
                              ) [MyNoTermList]
                            ) [Terms]
                            MyNoExprList(
                            ) [MyNoExprList]
                          ) [NoMinusExpr]
                        ) [DesAssStmtm]
                      ) [DesignatorStatementAssign]
                    ) [StatementDesStat]
                  ) [Statements]
                  StatementReturnExpr(
                    NoMinusExpr(
                      Terms(
                        NumberFactor(
                         10
                        ) [NumberFactor]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [StatementReturnExpr]
                ) [Statements]
              ) [MethodDecl]
            ) [MethodDeclarations]
            MethodDecl(
              PublicRight(
              ) [PublicRight]
              NoMethodTypeNameVoid(
               pisi
              ) [NoMethodTypeNameVoid]
              NoFormParam(
              ) [NoFormParam]
              MyNoDeclListVar(
              ) [MyNoDeclListVar]
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  StatementPrint(
                    NoMinusExpr(
                      Terms(
                        Var(
                          Design(
                            DesignatorIdent(
                             k
                            ) [DesignatorIdent]
                            MyNoDesignatorElemList(
                            ) [MyNoDesignatorElemList]
                          ) [Design]
                        ) [Var]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [StatementPrint]
                ) [Statements]
                StatementPrint(
                  NoMinusExpr(
                    Terms(
                      CharFactor(
                       X
                      ) [CharFactor]
                      MyNoTermList(
                      ) [MyNoTermList]
                    ) [Terms]
                    MyNoExprList(
                    ) [MyNoExprList]
                  ) [NoMinusExpr]
                ) [StatementPrint]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
        ) [MyMethodDeclClass]
      ) [MyClassDecl]
    ) [ClassDeclElem]
  ) [MyDeclList]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        NoRights(
        ) [NoRights]
        NoMethodTypeNameVoid(
         uradi
        ) [NoMethodTypeNameVoid]
        FormParams(
          FormalParamDecls(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclNoBraces(
                  Type(
                   Postavljac
                  ) [Type]
                 k1
                ) [FormalParamDeclNoBraces]
              ) [SingleFormalParamDecl]
              ErrorStmtFormPars(
              ) [ErrorStmtFormPars]
            ) [FormalParamDecls]
            FormalParamDeclNoBraces(
              Type(
               Postavljac
              ) [Type]
             k2
            ) [FormalParamDeclNoBraces]
          ) [FormalParamDecls]
        ) [FormParams]
        MyNoDeclListVar(
        ) [MyNoDeclListVar]
        Statements(
          NoStmt(
          ) [NoStmt]
          StatementIf(
            BeginingIf(
            ) [BeginingIf]
            CondIf(
              Condition(
                CondTerms(
                  CondFactRelop(
                    NoMinusExpr(
                      Terms(
                        Var(
                          Design(
                            DesignatorIdent(
                             k2
                            ) [DesignatorIdent]
                            MyNoDesignatorElemList(
                            ) [MyNoDesignatorElemList]
                          ) [Design]
                        ) [Var]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                    Different(
                    ) [Different]
                    NoMinusExpr(
                      Terms(
                        Var(
                          Design(
                            DesignatorIdent(
                             null
                            ) [DesignatorIdent]
                            MyNoDesignatorElemList(
                            ) [MyNoDesignatorElemList]
                          ) [Design]
                        ) [Var]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [CondFactRelop]
                  MyCondTermList(
                    MyNoCondTermList(
                    ) [MyNoCondTermList]
                    CondFactRelop(
                      NoMinusExpr(
                        Terms(
                          Var(
                            Design(
                              DesignatorIdent(
                               k1
                              ) [DesignatorIdent]
                              MyNoDesignatorElemList(
                              ) [MyNoDesignatorElemList]
                            ) [Design]
                          ) [Var]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                      Different(
                      ) [Different]
                      NoMinusExpr(
                        Terms(
                          Var(
                            Design(
                              DesignatorIdent(
                               null
                              ) [DesignatorIdent]
                              MyNoDesignatorElemList(
                              ) [MyNoDesignatorElemList]
                            ) [Design]
                          ) [Var]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [CondFactRelop]
                  ) [MyCondTermList]
                ) [CondTerms]
                MyNoConditionList(
                ) [MyNoConditionList]
              ) [Condition]
            ) [CondIf]
            StmtIf(
              StatementSTMT(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    StatementPrint(
                      NoMinusExpr(
                        Terms(
                          FuncCallFactor(
                            FuncCallFactorDesignator(
                              Design(
                                DesignatorIdent(
                                 k1
                                ) [DesignatorIdent]
                                MyDesignatorElemList(
                                  ClassField(
                                   postavi
                                  ) [ClassField]
                                  MyNoDesignatorElemList(
                                  ) [MyNoDesignatorElemList]
                                ) [MyDesignatorElemList]
                              ) [Design]
                            ) [FuncCallFactorDesignator]
                            NoActuals(
                            ) [NoActuals]
                          ) [FuncCallFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [StatementPrint]
                  ) [Statements]
                  StatementPrint(
                    NoMinusExpr(
                      Terms(
                        FuncCallFactor(
                          FuncCallFactorDesignator(
                            Design(
                              DesignatorIdent(
                               k2
                              ) [DesignatorIdent]
                              MyDesignatorElemList(
                                ClassField(
                                 postavi
                                ) [ClassField]
                                MyNoDesignatorElemList(
                                ) [MyNoDesignatorElemList]
                              ) [MyDesignatorElemList]
                            ) [Design]
                          ) [FuncCallFactorDesignator]
                          NoActuals(
                          ) [NoActuals]
                        ) [FuncCallFactor]
                        MyNoTermList(
                        ) [MyNoTermList]
                      ) [Terms]
                      MyNoExprList(
                      ) [MyNoExprList]
                    ) [NoMinusExpr]
                  ) [StatementPrint]
                ) [Statements]
              ) [StatementSTMT]
            ) [StmtIf]
          ) [StatementIf]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      NoRights(
      ) [NoRights]
      NoMethodTypeNameVoid(
       main
      ) [NoMethodTypeNameVoid]
      NoFormParam(
      ) [NoFormParam]
      MyDeclListVar(
        MyDeclListVar(
          MyDeclListVar(
            MyNoDeclListVar(
            ) [MyNoDeclListVar]
            VarDecl(
              NoRights(
              ) [NoRights]
              VarDeclType(
                Type(
                 int
                ) [Type]
              ) [VarDeclType]
              VarDeclElemBraces(
               niz
              ) [VarDeclElemBraces]
              MyNoVarDeclList(
              ) [MyNoVarDeclList]
            ) [VarDecl]
          ) [MyDeclListVar]
          VarDecl(
            NoRights(
            ) [NoRights]
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            VarDeclElemNoBraces(
             e
            ) [VarDeclElemNoBraces]
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
          ) [VarDecl]
        ) [MyDeclListVar]
        VarDecl(
          NoRights(
          ) [NoRights]
          VarDeclType(
            Type(
             int
            ) [Type]
          ) [VarDeclType]
          VarDeclElemNoBraces(
           d
          ) [VarDeclElemNoBraces]
          MyVarDeclList(
            MyNoVarDeclList(
            ) [MyNoVarDeclList]
            ErrorStmt(
            ) [ErrorStmt]
          ) [MyVarDeclList]
        ) [VarDecl]
      ) [MyDeclListVar]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            StatementDesStat(
              DesignatorStatementAssign(
                ErrorDesAssStmtm(
                ) [ErrorDesAssStmtm]
              ) [DesignatorStatementAssign]
            ) [StatementDesStat]
          ) [Statements]
          StatementPrint(
            NoMinusExpr(
              Terms(
                Var(
                  Design(
                    DesignatorIdent(
                     eol
                    ) [DesignatorIdent]
                    MyNoDesignatorElemList(
                    ) [MyNoDesignatorElemList]
                  ) [Design]
                ) [Var]
                MyNoTermList(
                ) [MyNoTermList]
              ) [Terms]
              MyNoExprList(
              ) [MyNoExprList]
            ) [NoMinusExpr]
          ) [StatementPrint]
        ) [Statements]
        StatementFor(
          MyDesignatorForBegin(
            DesignatorStatementAssign(
              DesAssStmtm(
                Design(
                  DesignatorIdent(
                   e
                  ) [DesignatorIdent]
                  MyNoDesignatorElemList(
                  ) [MyNoDesignatorElemList]
                ) [Design]
                DesAssStmtCombOper(
                  Assign(
                  ) [Assign]
                ) [DesAssStmtCombOper]
                NoMinusExpr(
                  Terms(
                    NumberFactor(
                     10
                    ) [NumberFactor]
                    MyNoTermList(
                    ) [MyNoTermList]
                  ) [Terms]
                  MyNoExprList(
                  ) [MyNoExprList]
                ) [NoMinusExpr]
              ) [DesAssStmtm]
            ) [DesignatorStatementAssign]
          ) [MyDesignatorForBegin]
          ErrorStmtConditionFor(
          ) [ErrorStmtConditionFor]
          MyDesignatorStatementFor(
            DesignatorStatementDEC(
              Design(
                DesignatorIdent(
                 e
                ) [DesignatorIdent]
                MyNoDesignatorElemList(
                ) [MyNoDesignatorElemList]
              ) [Design]
            ) [DesignatorStatementDEC]
          ) [MyDesignatorStatementFor]
          ForBody(
            StatementSTMT(
              Statements(
                NoStmt(
                ) [NoStmt]
                StatementDesStat(
                  DesignatorStatementAssign(
                    DesAssStmtm(
                      Design(
                        DesignatorIdent(
                         e
                        ) [DesignatorIdent]
                        MyNoDesignatorElemList(
                        ) [MyNoDesignatorElemList]
                      ) [Design]
                      DesAssStmtCombOper(
                        Assign(
                        ) [Assign]
                      ) [DesAssStmtCombOper]
                      NoMinusExpr(
                        Terms(
                          NumberFactor(
                           7
                          ) [NumberFactor]
                          MyNoTermList(
                          ) [MyNoTermList]
                        ) [Terms]
                        MyNoExprList(
                        ) [MyNoExprList]
                      ) [NoMinusExpr]
                    ) [DesAssStmtm]
                  ) [DesignatorStatementAssign]
                ) [StatementDesStat]
              ) [Statements]
            ) [StatementSTMT]
          ) [ForBody]
        ) [StatementFor]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:50:02,422 - ===================================
INFO  22:50:02,427 - Deklarisana promenljiva niz na liniji 4
INFO  22:50:02,428 - Deklarisana konstanta tipa int size na liniji 5
INFO  22:50:02,428 - Deklarisana promenljiva i na liniji 6
INFO  22:50:02,428 - Deklarisana promenljiva j na liniji 6
INFO  22:50:02,428 - Deklarisana promenljiva b na liniji 8
INFO  22:50:02,428 - Deklarisana promenljiva a na liniji 9
INFO  22:50:02,428 - Obradjuje se unutrasnja apstraktna klasa programa Postavljac na liniji 12
INFO  22:50:02,428 - Obradjuje se deklaracija apstraktne funkcije sa return iskazom postavi na liniji 15
INFO  22:50:02,428 - Obradjuje se unutrasnja klasa programa Klasa na liniji 20
INFO  22:50:02,429 - Deklarisano polje klase  k na liniji 21
INFO  22:50:02,429 - Deklarisano polje klase  i na liniji 22
INFO  22:50:02,429 - Deklarisan polje klase niz na liniji 23
INFO  22:50:02,429 - Obradjuje se funkcija bez return iskaza postavix na liniji 25
INFO  22:50:02,429 - Deklarisan formalni parametar x funkcije:postavix na liniji 25
INFO  22:50:02,429 - Detektovan pristup polju klase:   i na liniji 26 na liniji 26
ERROR 22:50:02,429 - Semanticka greska na liniji 20: klasa izvedena iz apstraktne klase mora implementirati sve njene apstraktne metode!
INFO  22:50:02,429 - Obradjuje se unutrasnja klasa programa Klasa1 na liniji 31
INFO  22:50:02,429 - Deklarisano polje klase  k na liniji 32
INFO  22:50:02,430 - Obradjuje se funkcija sa return iskazom postavi na liniji 34
INFO  22:50:02,430 - Detektovan pristup polju klase:  k na liniji 35 na liniji 35
INFO  22:50:02,430 - Detektovan pristup polju klase:   k na liniji 35 na liniji 35
INFO  22:50:02,430 - Obradjuje se funkcija bez return iskaza pisi na liniji 38
INFO  22:50:02,430 - Detektovan pristup polju klase:   k na liniji 39 na liniji 39
INFO  22:50:02,430 - Obradjuje se funkcija bez return iskaza uradi na liniji 48
INFO  22:50:02,430 - Deklarisan formalni parametar k1 funkcije:uradi na liniji 48
INFO  22:50:02,430 - Deklarisan formalni parametar k2 funkcije:uradi na liniji 48
INFO  22:50:02,430 - Detektovan pristup simbolickoj konstanti:   null na liniji 49 na liniji 49
INFO  22:50:02,431 - Detektovan pristup simbolickoj konstanti:   null na liniji 49 na liniji 49
INFO  22:50:02,431 - Detektovan pristup polju klase:  postavi na liniji 50 na liniji 50
INFO  22:50:02,431 - Detektovan poziv  metoda unutrasnje klase:   postavi na liniji 50 na liniji 50
INFO  22:50:02,432 - Detektovan pristup polju klase:  postavi na liniji 51 na liniji 51
INFO  22:50:02,432 - Detektovan poziv  metoda unutrasnje klase:   postavi na liniji 51 na liniji 51
INFO  22:50:02,432 - Obradjuje se funkcija bez return iskaza main na liniji 55
INFO  22:50:02,432 - Deklarisana promenljiva niz na liniji 56
INFO  22:50:02,432 - Deklarisana promenljiva e na liniji 57
INFO  22:50:02,432 - Deklarisana promenljiva d na liniji 58
INFO  22:50:02,432 - Detektovan pristup simbolickoj konstanti:   eol na liniji 62 na liniji 62
INFO  22:50:02,432 -  Print count calls = 5
INFO  22:50:02,432 -  Deklarisanih promenljivih ima = 12
INFO  22:50:02,432 - ===================================
ERROR 22:50:02,432 - Parsiranje NIJE uspesno zavrseno!
